{"version":3,"sources":["assets/images/elements.svg","servicesAndCharacteristics.js","actions/index.js","utils/index.js","components/Loader/index.jsx","components/GoogleOauth/index.jsx","components/FacebookOauth/index.jsx","components/routes/Login/index.jsx","actions/bluetooth.js","components/WebBluetooth/index.jsx","components/routes/Account/Devices.jsx","components/routes/Account/Recipes.jsx","components/routes/Account/index.js","components/routes/BluetoothNotAvailable/index.jsx","App.jsx","reducers/index.js","reducers/auth.js","reducers/data.js","reducers/bluetooth.js","reducers/settings.js","store.js","index.jsx"],"names":["module","exports","dataTransferService","name","uuid","description","characteristics","properties","axios","defaults","baseURL","showAppPreloader","createAction","fetchTokenRequest","fetchTokenSuccess","fetchTokenFailure","convertToken","data","type","appId","dispatch","post","grant_type","client_id","backend","token","then","response","state","duration","cookies","Cookies","expiresDate","Date","setSeconds","getSeconds","set","JSON","stringify","path","expires","writeStateToCookie","expires_in","catch","logoutRequest","logoutSuccess","logoutFailure","fetchRecipesRequest","fetchRecipesSuccess","fetchRecipesFailure","recipe","get","fetchUserSuccess","fetchUserFailure","user","getState","access_token","auth","cookie","headers","Authorization","e","status","navigate","fetchUserDevicesSuccess","fetchUserDevicesFailure","saveDeviceRequest","saveDeviceSuccess","saveDeviceFailure","removeDeviceSuccess","removeDeviceFailure","getBinaryRecipeRequest","getBinaryRecipeSuccess","getBinaryRecipeFailure","Loader","className","Component","actionCreators","actions","GoogleOauth","responseGoogleRequest","responseGoogleSuccess","props","accessToken","responseGoogleFailure","clientId","buttonText","onSuccess","this","onFailure","onRequest","cookiePolicy","connect","FacebookOauth","failure","responseFacebook","setState","autoLoad","fields","callback","textButton","disableMobileRedirect","Login","isOpera","window","opr","addons","opera","navigator","userAgent","indexOf","isFirefox","InstallTrigger","isSafari","test","HTMLElement","safari","pushNotification","toString","isIE","document","documentMode","isEdge","StyleMedia","isChrome","chrome","webstore","runtime","CSS","isLogged","src","logo","alt","includes","connectToDeviceRequest","connectToDeviceSuccess","connectToDeviceFailure","connectToDevice","newFilters","devicesFromStore","bluetooth","devices","filters","requestDevice","acceptAllDevices","undefined","optionalServices","device","_","find","deviceFromStore","id","Error","console","info","table","userDevices","newDevices","uniqBy","uid","length","put","saveDevice","connectToGATTServer","error","message","connectGattRequest","connectGattSuccess","connectGattFailure","gatt","server","fetchBatteryServiceRequest","fetchBatteryServiceSuccess","fetchBatteryServiceFailure","fetchDeviceInfoRequest","fetchDeviceInfoSuccess","fetchDeviceInfoFailure","fetchDeviceInfoCharacteristicSuccess","recipeByteTransfered","keyI","characteristicWrite","writeRecipeToDevice","recipeBinary","service","handleResponseControlMsg","event","target","value","getUint8","log","getCharacteristic","characteristic","startNotifications","addEventListener","handleLevelChanged","sendingData","a","sum","buffer","byteLength","writeValue","slice","getPrimaryService","ser","ArrayBuffer","DataView","setInt8","setInt32","setInt16","getInt8","Int8Array","alert","batteryServiceAction","handleBatteryLevelChange","level","readValue","deviceInfoServiceAction","manufacturerName","WebBluetooth","bluetoothDevice","batteryLevelCharacteristic","gattServer","transferService","services","onDisconnected","serviceConnect","CtrlRxCharacteristicUuid","sendDataToDevice","result","i","CtrlTxCharacteristicUuid","StatusCharacteristicUuid","batteryLevel","prevProps","batteryService","binary_recipe","removeDevice","filter","Devices","showDrawer","byteTransfered","map","span","key","title","CheckCircleTwoTone","twoToneColor","extra","style","color","shape","icon","CloseCircleOutlined","onClick","width","Number","isInteger","percent","Math","floor","PlusCircleOutlined","gutter","bluetoothActions","getBinaryRecipe","recipeId","Recipes","onClose","recipes","cover","image","description_text","buttonVisible","logout","remove","Account","current","handleClick","first_name","last_name","selectedKeys","mode","Item","AntDesignOutlined","ReadOutlined","placement","closable","visible","BluetoothNotAvailable","href","App","authCookie","showPreloader","from","to","noThrow","default","subTitle","settings","handleActions","payload","base64","binary_string","atob","len","bytes","Uint8Array","charCodeAt","base64ToArrayBuffer","push","deviceInfoService","stack","preloaderStack","shift","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","reducer","reducers","devTools","process","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.e904ab13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elements.b15f934a.svg\";","export default [\n    {\n        name: 'Device Information Service',\n        uuid: 0x180a,\n        description: 'Exposes manufacturer and/or information about a device',\n        characteristics: [\n            {\n                name: 'Manufacturer Name String',\n                uuid: 0x2a29,\n                description: 'Represent the name of the manufacturer of device',\n                properties: ['read'],\n            },\n        ],\n    },\n    {\n        name: 'Battery Service',\n        uuid: 0x180f,\n        description:\n            'Exposes the Battery Level of a single battery or set of batteries in a device',\n        characteristics: [\n            {\n                name: 'Battery Level',\n                uuid: 0x2a19,\n                description: 'Represent level of the battery in a device',\n                properties: ['read', 'notify'],\n            },\n        ],\n    },\n    {\n        name: 'Data Transfer Service',\n        uuid: '5cf052d0-2403-4719-a558-b7e72c48112f',\n        description: 'Provide data receive and transmitting of a data',\n        characteristics: [\n            {\n                name: 'Data Receive',\n                uuid: '5cf052d1-2403-4719-a558-b7e72c48112f',\n                description: 'Receive data channel',\n                properties: ['write'],\n            },\n            {\n                name: 'Data Transmit',\n                uuid: '5cf052d2-2403-4719-a558-b7e72c48112f',\n                description: 'Transmit data channel',\n                properties: ['read', 'notify'],\n            },\n            {\n                name: 'Control Receive',\n                uuid: '5cf052d3-2403-4719-a558-b7e72c48112f',\n                description: 'Control data receive channel',\n                properties: ['write'],\n            },\n            {\n                name: 'Control Transmit',\n                uuid: '5cf052d4-2403-4719-a558-b7e72c48112f',\n                description: 'Control data transmit channel',\n                properties: ['read', 'notify'],\n            },\n            {\n                name: 'Status',\n                uuid: '5cf052d5-2403-4719-a558-b7e72c48112f',\n                description: 'Expose status of transfer data',\n                properties: ['write', 'read', 'notify'],\n            },\n        ],\n    },\n];\n\nexport const deviceInformationService = {\n    name: 'Device Information Service',\n    uuid: 0x180a,\n    description: 'Exposes manufacturer and/or information about a device',\n    characteristics: [\n        {\n            name: 'Manufacturer Name String',\n            uuid: 0x2a29,\n            description: 'Represent the name of the manufacturer of device',\n            properties: ['read'],\n        },\n    ],\n};\n\nexport const batteryService = {\n    name: 'Battery Service',\n    uuid: 0x180f,\n    description:\n        'Exposes the Battery Level of a single battery or set of batteries in a device',\n    characteristics: [\n        {\n            name: 'Battery Level',\n            uuid: 0x2a19,\n            description: 'Represent level of the battery in a device',\n            properties: ['read', 'notify'],\n        },\n    ],\n};\n\nexport const dataTransferService = {\n    name: 'Data Transfer Service',\n    uuid: '5cf052d0-2403-4719-a558-b7e72c48112f',\n    description: 'Provide data receive and transmitting of a data',\n    characteristics: [\n        {\n            name: 'Data Receive',\n            uuid: '5cf052d1-2403-4719-a558-b7e72c48112f',\n            description: 'Receive data channel',\n            properties: ['write'],\n        },\n        {\n            name: 'Data Transmit',\n            uuid: '5cf052d2-2403-4719-a558-b7e72c48112f',\n            description: 'Transmit data channel',\n            properties: ['read', 'notify'],\n        },\n        {\n            name: 'Control Receive',\n            uuid: '5cf052d3-2403-4719-a558-b7e72c48112f',\n            description: 'Control data receive channel',\n            properties: ['write'],\n        },\n        {\n            name: 'Control Transmit',\n            uuid: '5cf052d4-2403-4719-a558-b7e72c48112f',\n            description: 'Control data transmit channel',\n            properties: ['read', 'notify'],\n        },\n        {\n            name: 'Status',\n            uuid: '5cf052d5-2403-4719-a558-b7e72c48112f',\n            description: 'Expose status of transfer data',\n            properties: ['write', 'read', 'notify'],\n        },\n    ],\n};\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport _ from 'lodash';\nimport { writeStateToCookie, removeStateFromCookie } from '../utils/index';\nimport { dataTransferService } from '../servicesAndCharacteristics';\n\naxios.defaults.baseURL = 'https://portal.pipe.today/api';\n\n///////////////////////\n/////// other ////////\n/////////////////////\n\nexport const showAppPreloader = createAction('SHOW_APP_PRELOADER');\n\n///////////////////////\n//// auth actions ////\n/////////////////////\n\nexport const fetchTokenRequest = createAction('FETCH_TOKEN_REQUEST');\nexport const fetchTokenSuccess = createAction('FETCH_TOKEN_SUCCESS');\nexport const fetchTokenFailure = createAction('FETCH_TOKEN_FAILURE');\n\nexport const convertToken = (data, type, appId) => {\n    return (dispatch) => {\n        dispatch(fetchTokenRequest());\n\n        axios\n            .post('oauth/convert-token/', {\n                grant_type: 'convert_token',\n                client_id: appId,\n                backend: type,\n                token: data,\n            })\n            .then((response) => {\n                writeStateToCookie(\n                    response.data,\n                    'auth_cookie',\n                    response.data.expires_in\n                );\n                dispatch(fetchTokenSuccess(response.data));\n            })\n            .catch(() => {\n                dispatch(fetchTokenFailure());\n            });\n    };\n};\n\nexport const logoutRequest = createAction('LOGOUT_REQUEST');\nexport const logoutSuccess = createAction('LOGOUT_SUCCESS');\nexport const logoutFailure = createAction('LOGOUT_FAILURE');\n\nexport const logout = () => {\n    return (dispatch) => {\n        dispatch(logoutRequest());\n        try {\n            removeStateFromCookie('auth_cookie');\n            dispatch(logoutSuccess());\n        } catch (e) {\n            dispatch(logoutFailure());\n            console.error('logout', e.message);\n        }\n    };\n};\n\n///////////////////////\n////// recipes ///////\n/////////////////////\n\nexport const fetchRecipesRequest = createAction('FETCH_RECIPES_REQUEST');\nexport const fetchRecipesSuccess = createAction('FETCH_RECIPES_SUCCESS');\nexport const fetchRecipesFailure = createAction('FETCH_RECIPES_FAILURE');\n\nexport const recipe = () => {\n    return (dispatch) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .get('recipe/')\n            .then((response) => {\n                dispatch(fetchRecipesSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(fetchRecipesFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\n///////////////////////\n//////// user ////////\n/////////////////////\n\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\n\nexport const user = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n        axios\n            .get('user/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(fetchUserSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch((e) => {\n                dispatch(fetchUserFailure());\n                dispatch(showAppPreloader(false));\n\n                switch (e.response.status) {\n                    case 403:\n                        navigate('/');\n                        break;\n                    default:\n                        break;\n                }\n            });\n    };\n};\n\nexport const fetchUserDevicesRequest = createAction(\n    'FETCH_USER_DEVICES_REQUEST'\n);\nexport const fetchUserDevicesSuccess = createAction(\n    'FETCH_USER_DEVICES_SUCCESS'\n);\nexport const fetchUserDevicesFailure = createAction(\n    'FETCH_USER_DEVICES_FAILURE'\n);\n\nexport const userDevices = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        axios\n            .get('user/devices/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(fetchUserDevicesSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(fetchUserDevicesFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const saveDeviceRequest = createAction('SAVE_DEVICE_REQUEST');\nexport const saveDeviceSuccess = createAction('SAVE_DEVICE_SUCCESS');\nexport const saveDeviceFailure = createAction('SAVE_DEVICE_FAILURE');\n\nexport const saveDevice = (device) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n            data: {\n                userDevices: { devices },\n            },\n        } = getState();\n\n        const newDevices = _.uniqBy(\n            [...devices, { name: device.name, uid: device.id }],\n            'uid'\n        );\n\n        if (newDevices.length === devices.length) {\n            return false;\n        }\n\n        dispatch(saveDeviceRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .put(\n                'user/devices/',\n                { devices: newDevices },\n                {\n                    headers: {\n                        Authorization: `Bearer ${access_token}`,\n                    },\n                }\n            )\n            .then((response) => {\n                dispatch(saveDeviceSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(saveDeviceFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const removeDeviceRequest = createAction('REMOVE_DEVICE_REQUEST');\nexport const removeDeviceSuccess = createAction('REMOVE_DEVICE_SUCCESS');\nexport const removeDeviceFailure = createAction('REMOVE_DEVICE_FAILURE');\n\nexport const removeDevice = (uid) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n            data: {\n                userDevices: { devices },\n            },\n        } = getState();\n\n        const newDevices = devices.filter((device) => {\n            if (device.uid === uid) {\n                return false;\n            }\n            return true;\n        });\n\n        dispatch(saveDeviceRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .put(\n                'user/devices/',\n                { devices: newDevices },\n                {\n                    headers: {\n                        Authorization: `Bearer ${access_token}`,\n                    },\n                }\n            )\n            .then((response) => {\n                dispatch(removeDeviceSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(removeDeviceFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const getBinaryRecipeRequest = createAction('GET_BINARY_RECIPE_REQUEST');\nexport const getBinaryRecipeSuccess = createAction('GET_BINARY_RECIPE_SUCCESS');\nexport const getBinaryRecipeFailure = createAction('GET_BINARY_RECIPE_FAILURE');\n\nexport const getBinaryRecipe = (recipeId) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        console.log('services', dataTransferService);\n\n        dispatch(getBinaryRecipeRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .get('recipe_binary/' + recipeId + '/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(getBinaryRecipeSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(getBinaryRecipeFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n","import Cookies from 'universal-cookie';\n\nexport const writeStateToCookie = (state, name, duration) => {\n    const cookies = new Cookies();\n    const expiresDate = new Date();\n    // expiresDate.setDate(expiresDate.getDate() + duration);\n    expiresDate.setSeconds(expiresDate.getSeconds() + duration);\n    cookies.set(name, JSON.stringify(state), {\n        path: '/',\n        expires: expiresDate,\n    });\n};\n\nexport const readStateFromCookie = (name) => {\n    const cookies = new Cookies();\n    return cookies.get(name);\n};\n\nexport const removeStateFromCookie = (name) => {\n    const cookies = new Cookies();\n    return cookies.remove(name);\n};\n\nexport const base64ToArrayBuffer = (base64) => {\n    var binary_string = window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n};\n","import React, { Component } from 'react';\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className=\"loader__container\">\n                <div className=\"loader\">\n                    <div className=\"lds-ripple\">\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GoogleLogin from 'react-google-login';\nimport * as actions from '../../actions';\n\n// const responseGoogle = (response, status) => {\n//     console.log(response, status);\n// };\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\nclass GoogleOauth extends Component {\n    responseGoogleRequest = () => {\n        // console.log(response, 'request');\n    };\n\n    responseGoogleSuccess = (response) => {\n        const { convertToken } = this.props;\n        convertToken(\n            response.accessToken,\n            'google-oauth2',\n            'h19R0p6UGmYKzuc4fg1uaPlHwXPOc8GktswMZEdu'\n        );\n    };\n\n    responseGoogleFailure = () => {\n        // console.log(response, 'failure');\n    };\n\n    render() {\n        return (\n            <GoogleLogin\n                // clientId=\"385449723022-vmed4lc1a8a1t3fsat4flujbobsblv01.apps.googleusercontent.com\"\n                clientId=\"205221816405-0lvlolma2t1lvif67t749qee7h9te473.apps.googleusercontent.com\"\n                // redirectUri=\"http://localhost:3000\"\n                buttonText=\"Login\"\n                onSuccess={this.responseGoogleSuccess}\n                onFailure={this.responseGoogleFailure}\n                onRequest={this.responseGoogleRequest}\n                cookiePolicy={'single_host_origin'}\n                className=\"google-oauth-btn\"\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(GoogleOauth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FacebookLogin from 'react-facebook-login';\nimport * as actions from '../../actions';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\nclass FacebookOauth extends Component {\n    state = {\n        response: null,\n        failure: null,\n    };\n\n    responseFacebook = (response) => {\n        const { convertToken } = this.props;\n        this.setState({ response });\n        convertToken(\n            response.accessToken,\n            'facebook',\n            'h19R0p6UGmYKzuc4fg1uaPlHwXPOc8GktswMZEdu'\n        );\n    };\n\n    onFailure = (failure) => {\n        this.setState({ failure });\n    };\n\n    render() {\n        return (\n            <>\n                <FacebookLogin\n                    appId=\"369580627566109\"\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={this.responseFacebook}\n                    onFailure={this.onFailure}\n                    textButton=\"Login\"\n                    // isMobile={false}\n                    // redirectUri={'https://sashakrauzer.github.io/'}\n                    disableMobileRedirect={true}\n                />\n                {/* <p>\n                    Response facebook: {JSON.stringify(this.state.response)}\n                    <br />\n                    Failure facebook: {JSON.stringify(this.state.failure)}\n                </p> */}\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(FacebookOauth);\n","import React, { Component } from 'react';\n\nimport GoogleOauth from '../../GoogleOauth/index.jsx';\nimport FacebookOauth from '../../FacebookOauth/index.jsx';\nimport logo from '../../../assets/images/elements.svg';\n\nclass Login extends Component {\n    render() {\n        var isOpera =\n            (!!window.opr && !!window.opr.addons) ||\n            !!window.opera ||\n            navigator.userAgent.indexOf(' OPR/') >= 0;\n\n        // Firefox 1.0+\n        var isFirefox = typeof InstallTrigger !== 'undefined';\n\n        // Safari 3.0+ \"[object HTMLElementConstructor]\"\n        var isSafari =\n            /constructor/i.test(window.HTMLElement) ||\n            (function (p) {\n                return p.toString() === '[object SafariRemoteNotification]';\n            })(\n                !window['safari'] ||\n                    (typeof safari !== 'undefined' &&\n                        window.safari.pushNotification)\n            );\n\n        // Internet Explorer 6-11\n        var isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n        // Edge 20+\n        var isEdge = !isIE && !!window.StyleMedia;\n\n        // Chrome 1 - 79\n        var isChrome =\n            !!window.chrome &&\n            (!!window.chrome.webstore || !!window.chrome.runtime);\n\n        // Edge (based on chromium) detection\n        var isEdgeChromium =\n            isChrome && navigator.userAgent.indexOf('Edg') !== -1;\n\n        // Blink engine detection\n        var isBlink = (isChrome || isOpera) && !!window.CSS;\n\n        var output = 'Detecting browsers by ducktyping:<hr>';\n        output += 'isFirefox: ' + isFirefox + '<br>';\n        output += 'isChrome: ' + isChrome + '<br>';\n        output += 'isSafari: ' + isSafari + '<br>';\n        output += 'isOpera: ' + isOpera + '<br>';\n        output += 'isIE: ' + isIE + '<br>';\n        output += 'isEdge: ' + isEdge + '<br>';\n        output += 'isEdgeChromium: ' + isEdgeChromium + '<br>';\n        output += 'isBlink: ' + isBlink + '<br>';\n        output += 'User Agent: ' + navigator.userAgent + '<br>';\n        const { isLogged } = this.props;\n        if (!isLogged) {\n            // dfsfds\n        }\n        return (\n            <div className=\"App\" path=\"/\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <div className=\"login-btn-wrap\">\n                        {!navigator.userAgent.includes('cider') ? (\n                            <GoogleOauth />\n                        ) : null}\n\n                        <FacebookOauth />\n                    </div>\n                    {/* <div dangerouslySetInnerHTML={{ __html: output }} /> */}\n                    {/* {output} */}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\n// import { navigate } from '@reach/router';\nimport _ from 'lodash';\n// import { writeStateToCookie } from '../utils/index';\nimport { dataTransferService } from '../servicesAndCharacteristics';\n\nimport { saveDevice } from './index';\n\naxios.defaults.baseURL = 'https://portal.pipe.today/api';\n\n///////////////////////\n///// Bluetooth //////\n/////////////////////\n\nexport const connectToDeviceRequest = createAction('CONNECT_TO_DEVICE_REQUEST');\nexport const connectToDeviceSuccess = createAction('CONNECT_TO_DEVICE_SUCCESS');\nexport const connectToDeviceFailure = createAction('CONNECT_TO_DEVICE_FAILURE');\n\n// Подключение к выбраному устройству\nexport const connectToDevice = (newFilters) => {\n    return (dispatch, getState) => {\n        const {\n            bluetooth: { devices: devicesFromStore },\n        } = getState();\n\n        dispatch(connectToDeviceRequest());\n\n        // const filters = newFilters || [{ namePrefix: 'Pipe' }];\n        const filters = newFilters;\n        navigator.bluetooth\n            .requestDevice({\n                acceptAllDevices: filters ? undefined : true,\n                filters,\n                optionalServices: [\n                    '5cf052d0-2403-4719-a558-b7e72c48112f',\n                    'battery_service',\n                    0x2a29,\n                    0x180a,\n                ],\n            })\n            .then((device) => {\n                if (\n                    _.find(\n                        devicesFromStore,\n                        (deviceFromStore) => deviceFromStore.id === device.id\n                    )\n                ) {\n                    throw new Error('device has already been added');\n                } else {\n                    console.info(\n                        '%cconnected device:',\n                        'color:green; font-size:2em; border-top:10px solid red'\n                    );\n                    console.table(device);\n\n                    dispatch(connectToDeviceSuccess(device));\n                    dispatch(saveDevice(device));\n                    dispatch(connectToGATTServer(device));\n                }\n            })\n            .catch((error = { message: 'connectToDeviceFailure' }) => {\n                console.error(error.message);\n                dispatch(connectToDeviceFailure());\n            });\n    };\n};\n\nexport const connectGattRequest = createAction('CONNECT_GATT_REQUEST');\nexport const connectGattSuccess = createAction('CONNECT_GATT_SUCCESS');\nexport const connectGattFailure = createAction('CONNECT_GATT_FAILURE');\n\n// Подключение к GATT серверу выбранного устройства\nexport const connectToGATTServer = (device) => {\n    return (dispatch) => {\n        dispatch(connectGattRequest());\n        device.gatt\n            .connect()\n            .then((server) => {\n                console.info(\n                    '%cGATT server:',\n                    'color:green; font-size:2em; border-top:10px solid red'\n                );\n                console.table(server);\n\n                dispatch(connectGattSuccess(server));\n            })\n            .catch(() => {\n                console.error('connectGattFailure');\n                dispatch(connectGattFailure());\n            });\n    };\n};\n\nexport const fetchBatteryServiceRequest = createAction(\n    'FETCH_BATTERY_SERVICE_REQUEST'\n);\nexport const fetchBatteryServiceSuccess = createAction(\n    'FETCH_BATTERY_SERVICE_SUCCESS'\n);\nexport const fetchBatteryServiceFailure = createAction(\n    'FETCH_BATTERY_SERVICE_FAILURE'\n);\n\nexport const fetchBatteryCharacteristicSuccess = createAction(\n    'FETCH_BATTERY_CHARACTERISTIC_SUCCESS'\n);\n\nexport const batteryService = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchBatteryServiceRequest());\n\n        const {\n            bluetooth: { server },\n        } = getState();\n\n        server\n            .getPrimaryService('battery_service')\n            .then((service) => {\n                dispatch(fetchBatteryServiceSuccess());\n                return service.getCharacteristic('battery_level');\n            })\n            .catch(() => {\n                dispatch(fetchBatteryServiceFailure());\n            })\n            .then((characteristic) => {\n                if (characteristic) {\n                    characteristic.startNotifications();\n                    characteristic.addEventListener(\n                        'characteristicvaluechanged',\n                        handleBatteryLevelChange\n                    );\n                    return characteristic.readValue();\n                }\n                throw new Error('characteristic baterry level not found');\n            })\n            .then((value) => {\n                dispatch(\n                    fetchBatteryServiceSuccess({ level: value.getUint8(0) })\n                );\n            })\n            .catch(() => {});\n\n        function handleBatteryLevelChange(event) {\n            dispatch(\n                fetchBatteryServiceSuccess({\n                    level: event.target.value.getUint8(0),\n                })\n            );\n        }\n    };\n};\n\nexport const fetchDeviceInfoRequest = createAction('FETCH_DEVICE_INFO_REQUEST');\nexport const fetchDeviceInfoSuccess = createAction('FETCH_DEVICE_INFO_SUCCESS');\nexport const fetchDeviceInfoFailure = createAction('FETCH_DEVICE_INFO_FAILURE');\n\nexport const fetchDeviceInfoCharacteristicSuccess = createAction(\n    'FETCH_DEVICE_INFO_CHARACTERISTIC_SUCCESS'\n);\n\nexport const deviceInfoService = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchDeviceInfoRequest());\n\n        const {\n            bluetooth: { server },\n        } = getState();\n\n        server\n            .getPrimaryService(0x180a)\n            .then((service) => {\n                dispatch(fetchDeviceInfoSuccess());\n                return service.getCharacteristic(0x2a29);\n            })\n            .catch(() => {\n                dispatch(fetchDeviceInfoFailure());\n            })\n            .then((characteristic) => {\n                if (characteristic) {\n                    return characteristic.readValue();\n                }\n                throw new Error('characteristic manufacturerName not found');\n            })\n            .then((value) => {\n                dispatch(\n                    fetchDeviceInfoCharacteristicSuccess({\n                        manufacturerName: value.getUint8(0),\n                    })\n                );\n            })\n            .catch(() => {});\n    };\n};\n\nexport const writeRecipeToDeviceRequest = createAction(\n    'WRITE_RECIPE_TO_DEVICE_REQUEST'\n);\nexport const writeRecipeToDeviceSuccess = createAction(\n    'WRITE_RECIPE_TO_DEVICE_SUCCESS'\n);\nexport const writeRecipeToDeviceFailure = createAction(\n    'WRITE_RECIPE_TO_DEVICE_FAILURE'\n);\n\nexport const recipeByteTransfered = createAction('RECIPE_BYTE_TRANSFERED');\n\nlet keyI = 0;\nlet characteristicWrite = null;\n\nexport const writeRecipeToDevice = () => {\n    return (dispatch, getState) => {\n        const {\n            bluetooth: { server },\n            data: { recipeBinary },\n        } = getState();\n\n        let service = null;\n\n        // connect to service\n\n        server\n            .getPrimaryService(dataTransferService.uuid)\n            .then((ser) => {\n                service = ser;\n                return service.getCharacteristic(\n                    '5cf052d4-2403-4719-a558-b7e72c48112f'\n                );\n            })\n            .then((characteristic) => {\n                return characteristic.startNotifications();\n            })\n            .then((characteristic) => {\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    handleResponseControlMsg\n                );\n                console.log('Подписка на Control Transmit');\n\n                return service.getCharacteristic(\n                    '5cf052d3-2403-4719-a558-b7e72c48112f'\n                );\n            })\n            .then((characteristic) => {\n                console.log('characteristic Control Receive');\n                let buffer = new ArrayBuffer(20);\n                let msgKeyWord8 = 0x0a;\n                let operationCode = 0xff;\n                let dataSize32 = 0x2334;\n                let dataType16 = 0x6;\n\n                new DataView(buffer).setInt8(0, msgKeyWord8, true);\n                new DataView(buffer).setInt8(1, operationCode, true);\n                new DataView(buffer).setInt32(2, dataSize32, true);\n                new DataView(buffer).setInt16(6, dataType16, true);\n                console.log('Control Receive', new DataView(buffer).getInt8(0));\n                characteristic.writeValue(new Int8Array(buffer));\n            })\n            .catch((error) => {\n                alert(error);\n            });\n\n        function handleResponseControlMsg(event) {\n            let status = event.target.value.getUint8(0);\n            console.log('handleResponseControlMsg', 0x0a === status, status);\n            if (0x0a === status) {\n                service\n                    .getCharacteristic('5cf052d5-2403-4719-a558-b7e72c48112f')\n                    .then((characteristic) => {\n                        characteristic.startNotifications();\n                        characteristic.addEventListener(\n                            'characteristicvaluechanged',\n                            handleLevelChanged\n                        );\n                        return service.getCharacteristic(\n                            '5cf052d1-2403-4719-a558-b7e72c48112f'\n                        );\n                    })\n                    .then((characteristic) => {\n                        characteristicWrite = characteristic;\n\n                        sendingData();\n                    });\n            } else if (0x0f === status) {\n                console.log('Recipe did saved');\n            } else {\n                console.log('');\n            }\n        }\n\n        function handleLevelChanged(event) {\n            let value = event.target.value;\n            console.log('handleStatusChanged', value, value.getUint8(0));\n            sendingData();\n        }\n\n        async function sendingData() {\n            console.log(\n                'sendingData...'\n                // recipeBinary.buffer,\n                // characteristicWrite\n            );\n\n            for (\n                let sum = 0;\n                keyI < recipeBinary.buffer.byteLength && sum < 400;\n                keyI = keyI + 20, sum = sum + 20\n            ) {\n                await characteristicWrite.writeValue(\n                    recipeBinary.buffer.slice(keyI, keyI + 20)\n                );\n                dispatch(\n                    recipeByteTransfered(\n                        recipeBinary.buffer.slice(keyI, keyI + 20).byteLength\n                    )\n                );\n                console.log(\n                    'DataBuffer',\n                    recipeBinary.buffer.slice(keyI, keyI + 20)\n                );\n            }\n\n            // for (let i = 0; keyI < buffer.byteLength; i++) {\n            //     result = await characteristicWrite.writeValue(\n            //         buffer.slice(keyI, keyI + 20)\n            //     );\n            //     keyI = keyI + 20;\n            //     console.log('sendingData', result);\n            //     break;\n            // }\n        }\n    };\n};\n","import React, { Component } from 'react';\n// import { connectWB } from './service';\nimport { connect } from 'react-redux';\n// import * as actions from '../../actions';\nimport {\n    connectToDevice,\n    batteryService as batteryServiceAction,\n    deviceInfoService as deviceInfoServiceAction,\n    writeRecipeToDevice,\n} from '../../actions/bluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data: { recipeBinary },\n        data,\n        bluetooth,\n        bluetooth: { device, server },\n    } = state;\n    return {\n        token,\n        device,\n        bluetooth,\n        server,\n        recipeBinary,\n        data,\n    };\n};\n\nconst actionCreators = {\n    connectToDevice,\n    batteryServiceAction,\n    deviceInfoServiceAction,\n    writeRecipeToDevice,\n};\n\nclass WebBluetooth extends Component {\n    state = {\n        bluetoothDevice: null,\n        batteryLevelCharacteristic: null,\n        gattServer: null,\n        transferService: null,\n        characteristic: null,\n    };\n\n    connectToDevice = () => {\n        navigator.bluetooth\n            .requestDevice({\n                // acceptAllDevices: true,\n                filters: [\n                    { name: 'BlueNRG' },\n                    // { name: 'JUST-ASUS' },\n                    { services: ['5cf052d0-2403-4719-a558-b7e72c48112f'] },\n                    // { services: ['00001800-0000-1000-8000-00805f9b34fb'] },\n                ],\n                optionalServices: ['5cf052d0-2403-4719-a558-b7e72c48112f'],\n            })\n            .then((device) => {\n                console.log('device', device);\n                this.setState({ bluetoothDevice: device });\n                this.state.bluetoothDevice.addEventListener(\n                    'gattserverdisconnected',\n                    this.onDisconnected\n                );\n            })\n            .catch((error) => {\n                // alert(error);\n                console.log('error', error);\n            });\n    };\n\n    // onDisconnected() {\n    //     // console.log('> Bluetooth Device disconnected');\n    //     // connectDeviceAndCacheCharacteristics().catch((error) => {\n    //     //     console.log('Argh! ' + error);\n    //     // });\n    // }\n\n    // disconnect = () => {\n    //     bluetoothDevice.gatt.disconnect();\n    // };\n\n    connect() {\n        // console.log('Connecting to Bluetooth Device...');\n        return this.state.bluetoothDevice.gatt\n            .connect()\n            .then((server) => {\n                console.log('server', server);\n\n                this.setState({ gattServer: server });\n            })\n            .catch((error) => {\n                alert(error);\n                // console.log('error', error);\n            });\n    }\n\n    serviceConnect = (uuid) => {\n        const { server } = this.props;\n        console.log('serviceConnect', server);\n        server\n            .getPrimaryService(uuid)\n            .then((service) => {\n                console.log('service', service);\n                this.setState({ transferService: service });\n\n                // return service.getCharacteristic(StatusCharacteristicUuid);\n            })\n            .catch((error) => {\n                alert(error);\n                // console.log('error', error);\n            });\n    };\n\n    CtrlRxCharacteristicUuid = () => {\n        let buffer = new ArrayBuffer(20);\n        let msgKeyWord8 = 0x0a;\n        let operationCode = 0xff;\n        let dataSize32 = 800;\n        let dataType16 = 0x0006;\n\n        new DataView(buffer).setInt8(0, msgKeyWord8);\n        new DataView(buffer).setInt8(1, operationCode);\n        new DataView(buffer).setInt32(2, dataSize32);\n        new DataView(buffer).setInt16(6, dataType16);\n\n        console.log('BUFFER', buffer, new DataView(buffer));\n        this.state.transferService\n            .getCharacteristic('5cf052d3-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Control Receive');\n                return characteristic.writeValue(buffer);\n            })\n            .then((value) => {\n                console.log('Control Receive value: ', value);\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    sendDataToDevice = () => {\n        let buffer = new ArrayBuffer(20);\n        new DataView(buffer).setInt32(0, 6000);\n        this.state.transferService\n            .getCharacteristic('5cf052d1-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Data Receive', buffer);\n\n                let result = null;\n                async function sendingData() {\n                    for (let i = 0; i < 800; i = i + 20) {\n                        result = await characteristic.writeValue(buffer);\n                        console.log('sendingData', result);\n                    }\n                }\n                sendingData();\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    CtrlTxCharacteristicUuid = () => {\n        this.state.transferService\n            .getCharacteristic('5cf052d4-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                return characteristic.startNotifications();\n            })\n            .then((characteristic) => {\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleResponseControlMsg\n                );\n                console.log('Подписка на Control Transmit');\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    StatusCharacteristicUuid = () => {\n        this.state.transferService\n            .getCharacteristic('5cf052d5-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Статус', characteristic);\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('Статус value: ', value);\n            });\n    };\n\n    batteryLevel = () => {\n        this.state.transferService\n            .getCharacteristic('battery_level')\n            .then((characteristic) => {\n                console.log('characteristic Статус', characteristic);\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('Заряд батареи', value.buffer);\n                // console.log('Battery percentage is ' + value.getUint8(0));\n            });\n    };\n\n    handleResponseControlMsg(event) {\n        let status = event.target.value.getUint8(0);\n        console.log('handleResponseControlMsg', 0x0a === status);\n        // console.log('Event - Battery percentage is ' + batteryLevel);\n    }\n\n    handleLevelChanged(event) {\n        let batteryLevel = event.target.value;\n        console.log('handleStatusChanged', batteryLevel, batteryLevel.buffer);\n        // console.log('Event - Battery percentage is ' + batteryLevel);\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            bluetooth: { device, server, batteryService },\n            batteryServiceAction,\n        } = this.props;\n        if (device && server && !batteryService) {\n            console.info(\n                '%cNeed request battery service...',\n                'border: 1px dashed gray; font-size: 1.5em; padding: 5px'\n            );\n            batteryServiceAction();\n        }\n        // if (device && server && !deviceInfoService) {\n        //     console.log('Need request device info service');\n        //     deviceInfoServiceAction();\n        // }\n\n        const { recipeBinary, writeRecipeToDevice } = this.props;\n        if (recipeBinary !== prevProps.recipeBinary) {\n            console.log('Recipe binary not same');\n            if (recipeBinary.binary_recipe) {\n                // writeToDevice\n                writeRecipeToDevice();\n            }\n        }\n    }\n\n    render() {\n        // const { device, recipeBinary } = this.props;\n        // if (device) {\n        //     console.log('Added device: ', device);\n        // }\n        // console.log('webbluetooth render', recipeBinary);\n        // if (recipeBinary) {\n        //     console.log('recipeBinary', recipeBinary.buffer);\n        // }\n        return (\n            <div>\n                {/* <p>\n                    {this.state.bluetoothDevice &&\n                        'Подключено устройство: ' +\n                            this.state.bluetoothDevice.name}\n                </p>\n                <button\n                    onClick={() => connectToDevice()}\n                    // className={'bluetooth__connect-btn'}\n                >\n                    Add device\n                </button>\n                <br />\n                <br />\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.connect();\n                    }}\n                >\n                    Подключиться к серверу гатт\n                </button>\n                <br />\n                <br />\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.serviceConnect(\n                            '5cf052d0-2403-4719-a558-b7e72c48112f'\n                        );\n                    }}\n                >\n                    Подключиться к DataTransferService\n                </button>\n\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.serviceConnect('battery_service');\n                    }}\n                >\n                    Подключиться к Baterry service\n                </button>\n                <br />\n                <br />\n                <ul>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.CtrlRxCharacteristicUuid();\n                            }}\n                        >\n                            Отправить control message\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.CtrlTxCharacteristicUuid();\n                            }}\n                        >\n                            Подписаться на ответ control message\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.StatusCharacteristicUuid();\n                            }}\n                        >\n                            Посмотреть сколько принято байт во время передачи\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.batteryLevel();\n                            }}\n                        >\n                            Узнать уровень заряда батареи\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.sendDataToDevice();\n                            }}\n                        >\n                            Send data to device\n                        </button>\n                    </li>\n                </ul> */}\n                {/* <button onClick={this.disconnect}>Дисконект</button>\n                <button onClick={this.onReconnectButtonClick}>Reconect</button> */}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(WebBluetooth);\n","import React, { Component } from 'react';\nimport { Card, Col, Row, Button, Tooltip, Divider, Progress } from 'antd';\nimport {\n    PlusCircleOutlined,\n    CloseCircleOutlined,\n    CheckCircleTwoTone,\n} from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport { connectToDevice } from '../../../actions/bluetooth';\nimport WebBluetooth from '../../WebBluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data,\n        data: { byteTransfered },\n        bluetooth: { device, server, batteryService },\n    } = state;\n    return {\n        token,\n        data,\n        device,\n        server,\n        batteryService,\n        byteTransfered,\n    };\n};\n\nconst actionCreators = {\n    // convertToken: actions.convertToken,\n    recipe: actions.recipe,\n    user: actions.user,\n    connectToDevice,\n    removeDevice: actions.removeDevice,\n};\n\nclass Devices extends Component {\n    render() {\n        const {\n            connectToDevice,\n            removeDevice,\n            device: deviceFromStore,\n            showDrawer,\n            server,\n            batteryService,\n            byteTransfered,\n            // batteryService: { level },\n        } = this.props;\n        // console.log('Devices', this.props.devices);\n        let devices =\n            this.props.devices &&\n            this.props.devices.map((device) => {\n                if (deviceFromStore && deviceFromStore.id === device.uid) {\n                    return (\n                        <Col span={8} key={device.uid}>\n                            <Card\n                                title={\n                                    <>\n                                        {deviceFromStore &&\n                                            deviceFromStore.id ===\n                                                device.uid && (\n                                                <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                                            )}\n                                        <Divider type=\"vertical\" />\n                                        <span>{device.name}</span>\n                                    </>\n                                }\n                                extra={\n                                    <div>\n                                        <Button\n                                            // type=\"primary\"\n                                            style={{ color: 'red' }}\n                                            shape=\"circle\"\n                                            icon={<CloseCircleOutlined />}\n                                            onClick={() =>\n                                                removeDevice(device.uid)\n                                            }\n                                        />\n                                    </div>\n                                }\n                                style={{ width: 300 }}\n                                // cover={<img alt=\"example\" src={device.image} />}\n                            >\n                                <p>\n                                    <strong>UID:</strong> {device.uid}\n                                </p>\n                                {batteryService &&\n                                    Number.isInteger(batteryService.level) && (\n                                        <p>\n                                            <strong>Battery level: </strong>\n                                            {batteryService.level}\n                                        </p>\n                                    )}\n\n                                {server && (\n                                    <Button onClick={showDrawer}>\n                                        Add recipe to device\n                                    </Button>\n                                )}\n                                {byteTransfered ? (\n                                    <Progress\n                                        type=\"circle\"\n                                        percent={Math.floor(\n                                            (byteTransfered * 100) / 9012\n                                        )}\n                                        width={40}\n                                    />\n                                ) : (\n                                    ''\n                                )}\n                            </Card>\n                        </Col>\n                    );\n                }\n                return (\n                    <Col span={8} key={device.uid}>\n                        <Card\n                            title={\n                                <>\n                                    {deviceFromStore &&\n                                        deviceFromStore.id === device.uid && (\n                                            <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                                        )}\n                                    <Divider type=\"vertical\" />\n                                    <span>{device.name}</span>\n                                </>\n                            }\n                            extra={\n                                <div>\n                                    <Button\n                                        // type=\"primary\"\n                                        style={{ color: 'red' }}\n                                        shape=\"circle\"\n                                        icon={\n                                            <CloseCircleOutlined twoToneColor=\"#52c41a\" />\n                                        }\n                                        onClick={() => removeDevice(device.uid)}\n                                    />\n                                </div>\n                            }\n                            style={{ width: 300 }}\n                            // cover={<img alt=\"example\" src={device.image} />}\n                        >\n                            <p>\n                                <strong>UID:</strong> {device.uid}\n                            </p>\n                            <Button\n                                // type=\"primary\"\n                                shape=\"circle\"\n                                icon={<PlusCircleOutlined />}\n                                onClick={() =>\n                                    connectToDevice([{ name: device.name }])\n                                }\n                            />\n                        </Card>\n                    </Col>\n                );\n            });\n        // console.log('fsadasd', devices);\n        return (\n            <>\n                <Row gutter={16}>{devices || ''}</Row>\n                <Divider />\n                <Tooltip title=\"Add device\">\n                    <Button\n                        shape=\"circle\"\n                        icon={<PlusCircleOutlined />}\n                        onClick={() => connectToDevice()}\n                    />\n                </Tooltip>\n                <WebBluetooth />\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Devices);\n","import React, { Component } from 'react';\nimport { Card, Row, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport * as bluetoothActions from '../../../actions/bluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    writeRecipeToDevice: bluetoothActions.writeRecipeToDevice,\n    getBinaryRecipe: actions.getBinaryRecipe,\n};\n\nclass Recipes extends Component {\n    render() {\n        const { onClose, getBinaryRecipe } = this.props;\n        let recipes = this.props.recipes.map((recipe) => {\n            return (\n                // <Col span={6} key={recipe.id}>\n                <Card\n                    key={recipe.id}\n                    title={recipe.name + ' - id' + recipe.id + ''}\n                    // extra={<a href=\"#\">More</a>}\n                    style={{ width: 250 }}\n                    cover={<img alt=\"example\" src={recipe.image} />}\n                    className=\"recipe__card\"\n                >\n                    <p>{recipe.description_text}</p>\n                    {this.props.buttonVisible && (\n                        <Button\n                            onClick={() => {\n                                onClose();\n                                getBinaryRecipe(recipe.id);\n                            }}\n                        >\n                            Add\n                        </Button>\n                    )}\n                </Card>\n                // </Col>\n            );\n        });\n        // console.log('fsadasd', recipes);\n        return <Row gutter={16}>{recipes}</Row>;\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Recipes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, PageHeader, Drawer } from 'antd';\nimport { AntDesignOutlined, ReadOutlined } from '@ant-design/icons';\n\nimport './account.scss';\n\nimport * as actions from '../../../actions';\nimport Devices from './Devices';\nimport Recipes from './Recipes';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data,\n    } = state;\n    return {\n        token,\n        data,\n    };\n};\n\nconst actionCreators = {\n    // convertToken: actions.convertToken,\n    recipe: actions.recipe,\n    user: actions.user,\n    userDevices: actions.userDevices,\n    logout: actions.logout,\n};\n\nclass Account extends Component {\n    state = {\n        current: 'devices',\n        showDrawer: false,\n    };\n\n    showDrawer = () => {\n        this.setState({ showDrawer: true });\n    };\n\n    onClose = () => {\n        this.setState({ showDrawer: false });\n    };\n\n    handleClick = (e) => {\n        // console.log('click ', e);\n        this.setState({ current: e.key });\n    };\n\n    componentDidMount() {\n        const { recipe, user, userDevices } = this.props;\n        // console.log('didMount');\n        recipe();\n        user();\n        userDevices();\n    }\n\n    render() {\n        const { current } = this.state;\n        const {\n            data: { user, recipe, userDevices },\n            logout,\n        } = this.props;\n        // console.log('account', user);\n        return (\n            <>\n                <div className=\"elements__account\">\n                    <PageHeader\n                        title={\n                            <div className=\"account-header\">\n                                {user && user.first_name + ' ' + user.last_name}\n                                <button onClick={logout}>Logout</button>\n                            </div>\n                        }\n                    >\n                        <Menu\n                            onClick={this.handleClick}\n                            selectedKeys={[current]}\n                            mode=\"horizontal\"\n                        >\n                            <Menu.Item\n                                key=\"devices\"\n                                icon={<AntDesignOutlined />}\n                            >\n                                My devices\n                            </Menu.Item>\n                            <Menu.Item key=\"recipes\" icon={<ReadOutlined />}>\n                                Recipes\n                            </Menu.Item>\n                        </Menu>\n                        {/* <WebBluetooth /> */}\n                    </PageHeader>\n                    {this.state.current === 'devices' ? (\n                        <Devices\n                            devices={userDevices && userDevices.devices}\n                            showDrawer={this.showDrawer}\n                        />\n                    ) : (\n                        <Recipes\n                            recipes={recipe}\n                            buttonVisible={true}\n                            onClose={this.onClose}\n                        />\n                    )}\n                    <Drawer\n                        title=\"Recipes\"\n                        width={640}\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.showDrawer}\n                    >\n                        <Recipes\n                            recipes={recipe}\n                            buttonVisible={true}\n                            onClose={this.onClose}\n                        />\n                    </Drawer>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Account);\n","import React, { Component } from 'react';\nimport { Result, Button } from 'antd';\n\nclass BluetoothNotAvailable extends Component {\n    render() {\n        return (\n            <Result\n                title={<h1>Your browser is not supported Web Bluetooth</h1>}\n                extra={\n                    <Button\n                        type=\"primary\"\n                        key=\"console\"\n                        href=\"https://www.google.com/chrome/\"\n                    >\n                        Download Google Chrome\n                    </Button>\n                }\n            />\n        );\n    }\n}\n\nexport default BluetoothNotAvailable;\n","import React, { Component } from 'react';\nimport { Router, Link, Redirect, navigate } from '@reach/router';\nimport { connect } from 'react-redux';\nimport { Result, Button } from 'antd';\n\nimport * as actions from './actions';\nimport { readStateFromCookie } from './utils';\nimport 'antd/dist/antd.css';\nimport './App.scss';\nimport Loader from './components/Loader';\n// import WebBluetooth from './WebBluetooth';\n// import GoogleOauth from './components/GoogleOauth';\nimport Login from './components/routes/Login';\nimport Account from './components/routes/Account';\nimport BluetoothNotAvailable from './components/routes/BluetoothNotAvailable';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { cookie },\n        settings: { showPreloader },\n    } = state;\n    return {\n        cookie,\n        showPreloader,\n    };\n};\n\nconst actionCreators = {\n    fetchTokenSuccess: actions.fetchTokenSuccess,\n};\n\nclass App extends Component {\n    componentWillMount() {\n        const { fetchTokenSuccess } = this.props;\n        const authCookie = readStateFromCookie('auth_cookie');\n        // Проверяем наличии куки авторизации\n        if (authCookie) {\n            console.info(\n                '%ccookie:',\n                'color:green; font-size:2em; border-top:10px solid red'\n            );\n            console.table(authCookie);\n            fetchTokenSuccess(authCookie);\n        }\n    }\n\n    render() {\n        const { cookie, showPreloader } = this.props;\n        // navigator.bluetooth.getAvailability().then((available) => {\n        //     if (available) console.log('This device supports Bluetooth!');\n        //     else console.log('Doh! Bluetooth is not supported');\n        // });\n        // navigator.bluetooth.onavailabilitychanged = function (event) {\n        //     console.log('availabilitychanged', event);\n        // };\n        // const bluetoothIsAvailable = !!navigator.bluetooth;\n\n        // if (!navigator.bluetooth) {\n        //     navigate('/bluetooth-not-available');\n        // }\n\n        if (!cookie.access_token) {\n            navigate('/');\n        }\n\n        return (\n            <>\n                {showPreloader && <Loader />}\n                {/* <Router basepath=\"elements\"> */}\n                <Router>\n                    {/* {!bluetoothIsAvailable ? (\n                        <Redirect\n                            // from=\"*\"\n                            to=\"bluetooth-not-available\"\n                            noThrow\n                        />\n                    ) : null} */}\n\n                    {cookie.access_token && (\n                        <Redirect from=\"/\" to=\"account\" noThrow />\n                    )}\n\n                    <Login path=\"/\" />\n                    <Account path=\"account\" />\n                    <BluetoothNotAvailable path=\"bluetooth-not-available\" />\n\n                    <Result\n                        default\n                        status=\"404\"\n                        title=\"404\"\n                        subTitle=\"Sorry, the page you visited does not exist.\"\n                        extra={\n                            <Button type=\"primary\">\n                                <Link to=\"/\">Back Home</Link>\n                            </Button>\n                        }\n                    />\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import auth from './auth';\nimport data from './data';\nimport bluetooth from './bluetooth';\nimport settings from './settings';\n\nexport default {\n    auth,\n    data,\n    bluetooth,\n    settings,\n};\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.fetchTokenSuccess](state, { payload }) {\n            return {\n                ...state,\n                cookie: payload,\n            };\n        },\n        [actions.logoutSuccess](state) {\n            return {\n                ...state,\n                cookie: {},\n            };\n        },\n    },\n    {\n        cookie: {},\n    }\n);\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport * as bluetoothActions from '../actions/bluetooth';\nimport { base64ToArrayBuffer } from '../utils';\n\nexport default handleActions(\n    {\n        [actions.fetchRecipesSuccess](state, { payload }) {\n            // console.log('fetchRecipesSuccess', payload);\n            return {\n                ...state,\n                recipe: payload,\n            };\n        },\n        [actions.fetchUserSuccess](state, { payload }) {\n            // console.log('fetchUserSuccess', payload);\n            return {\n                ...state,\n                user: payload,\n            };\n        },\n        [actions.fetchUserDevicesSuccess](state, { payload }) {\n            // console.log('fetchUserDevicesSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n        [actions.getBinaryRecipeSuccess](state, { payload }) {\n            // console.log('fetchUserDevicesSuccess', payload);\n            let buffer = base64ToArrayBuffer(payload.binary_recipe);\n            return {\n                ...state,\n                recipeBinary: { ...payload, buffer },\n            };\n        },\n        [bluetoothActions.recipeByteTransfered](state, { payload }) {\n            return {\n                ...state,\n                byteTransfered: state.byteTransfered + payload,\n            };\n        },\n        [actions.saveDeviceSuccess](state, { payload }) {\n            // console.log('saveDeviceSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n        [actions.removeDeviceSuccess](state, { payload }) {\n            // console.log('removeDeviceSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n    },\n    {\n        recipe: [],\n        user: null,\n        userDevices: null,\n        recipeBinary: null,\n        byteTransfered: 0,\n    }\n);\n","import { handleActions } from 'redux-actions';\n// import * as actions from '../actions';\nimport * as bluetoothActions from '../actions/bluetooth';\nimport _ from 'lodash';\n\nexport default handleActions(\n    {\n        [bluetoothActions.connectToDeviceSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            let newDevices = state.devices.slice();\n            newDevices.push({\n                id: payload.id,\n                name: payload.name,\n                device: payload,\n            });\n            return {\n                ...state,\n                device: payload,\n                devices: newDevices,\n            };\n        },\n        [bluetoothActions.connectGattSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            return {\n                ...state,\n                server: payload,\n            };\n        },\n        [bluetoothActions.fetchBatteryServiceSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            const { batteryService } = state;\n            return {\n                ...state,\n                batteryService: { ...batteryService, ...payload },\n            };\n        },\n        [bluetoothActions.fetchDeviceInfoCharacteristicSuccess](\n            state,\n            { payload }\n        ) {\n            // console.log('fetchTokenSuccess', payload);\n            const { deviceInfoService } = state;\n            return {\n                ...state,\n                deviceInfoService: { ...deviceInfoService, ...payload },\n            };\n        },\n    },\n    {\n        device: null,\n        devices: [],\n        server: null,\n        batteryService: null,\n        deviceInfoService: null,\n    }\n);\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.showAppPreloader](state, { payload }) {\n            // Stack for handle several requests\n            let stack = state.preloaderStack.slice();\n            if (payload) {\n                stack.push(0);\n            } else {\n                stack.shift();\n            }\n            return {\n                ...state,\n                showPreloader: !!stack.length,\n                preloaderStack: stack,\n            };\n        },\n    },\n    {\n        showPreloader: false,\n        preloaderStack: [],\n    }\n);\n","import reducers from './reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nconst middleware = getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: true,\n});\n\nexport default configureStore({\n    reducer: { ...reducers },\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}