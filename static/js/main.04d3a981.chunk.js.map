{"version":3,"sources":["assets/images/elements.svg","servicesAndCharacteristics.js","actions/index.js","utils/index.js","components/Loader/index.jsx","components/GoogleOauth/index.jsx","components/FacebookOauth/index.jsx","components/routes/Login/index.jsx","actions/bluetooth.js","components/WebBluetooth/index.jsx","components/routes/Account/Device.jsx","components/routes/Account/Devices.jsx","components/routes/Account/Recipes.jsx","components/routes/Account/index.js","components/routes/BluetoothNotAvailable/index.jsx","App.jsx","reducers/index.js","reducers/auth.js","reducers/data.js","reducers/bluetooth.js","reducers/settings.js","store.js","index.jsx"],"names":["module","exports","dataTransferService","name","uuid","description","characteristics","properties","axios","defaults","baseURL","showAppPreloader","createAction","fetchTokenRequest","fetchTokenSuccess","fetchTokenFailure","convertToken","data","type","appId","dispatch","post","grant_type","client_id","backend","token","then","response","state","duration","cookies","Cookies","expiresDate","Date","setSeconds","getSeconds","set","JSON","stringify","path","expires","writeStateToCookie","expires_in","catch","logoutRequest","logoutSuccess","logoutFailure","fetchRecipesRequest","fetchRecipesSuccess","fetchRecipesFailure","recipe","getState","access_token","auth","cookie","get","headers","Authorization","fetchUserSuccess","fetchUserFailure","user","e","status","navigate","fetchUserDevicesSuccess","fetchUserDevicesFailure","saveDeviceRequest","saveDeviceSuccess","saveDeviceFailure","removeDeviceSuccess","removeDeviceFailure","getBinaryRecipeRequest","getBinaryRecipeSuccess","getBinaryRecipeFailure","Loader","className","Component","actionCreators","actions","GoogleOauth","responseGoogleRequest","responseGoogleSuccess","props","accessToken","responseGoogleFailure","clientId","buttonText","onSuccess","this","onFailure","onRequest","cookiePolicy","connect","FacebookOauth","failure","responseFacebook","setState","onResponseFacebook","console","log","autoLoad","fields","callback","textButton","redirectUri","Login","isLogged","src","logo","alt","navigator","userAgent","includes","connectToDeviceRequest","connectToDeviceSuccess","connectToDeviceFailure","connectToDevice","newFilters","devicesFromStore","bluetooth","devices","filters","namePrefix","requestDevice","acceptAllDevices","undefined","optionalServices","device","_","find","deviceFromStore","Error","info","table","addEventListener","event","onDisconnected","userDevices","newDevices","uniqBy","uid","id","length","put","saveDevice","connectToGATTServer","error","message","deviceDisconnected","target","connectGattRequest","connectGattSuccess","connectGattFailure","time","text","toJSON","substr","exponentialBackoff","max","delay","toTry","success","fail","server","setTimeout","gatt","fetchBatteryServiceRequest","fetchBatteryServiceSuccess","fetchBatteryServiceFailure","fetchDeviceInfoRequest","fetchDeviceInfoSuccess","fetchDeviceInfoFailure","fetchDeviceInfoCharacteristicSuccess","recipeByteTransfered","keyI","characteristicWrite","writeRecipeToDevice","recipeBinary","service","handleResponseControlMsg","value","getUint8","getCharacteristic","characteristic","startNotifications","handleLevelChanged","sendingData","a","sum","buffer","byteLength","writeValue","slice","getPrimaryService","ser","ArrayBuffer","DataView","setInt8","setInt32","setInt16","getInt8","Int8Array","alert","batteryServiceAction","handleBatteryLevelChange","level","readValue","deviceInfoServiceAction","manufacturerName","WebBluetooth","bluetoothDevice","batteryLevelCharacteristic","gattServer","transferService","services","serviceConnect","CtrlRxCharacteristicUuid","sendDataToDevice","result","i","CtrlTxCharacteristicUuid","StatusCharacteristicUuid","batteryLevel","prevProps","batteryService","binary_recipe","Device","componentDidUpdate","connectedDevice","GATTDisconnected","Modal","title","content","connected","removeDevice","showDrawer","byteTransfered","GATTConnected","disconnectGattServer","connectionRequest","deviceState","CheckCircleTwoTone","twoToneColor","LoadingOutlined","extra","style","color","shape","icon","CloseCircleOutlined","onClick","width","Number","isInteger","percent","Math","floor","PlusCircleOutlined","filter","disconnect","Devices","connectedDevices","map","key","gutter","bluetoothActions","getBinaryRecipe","recipeId","Recipes","onClose","recipes","cover","image","description_text","buttonVisible","logout","remove","Account","current","handleClick","first_name","last_name","selectedKeys","mode","Item","AntDesignOutlined","ReadOutlined","placement","closable","visible","BluetoothNotAvailable","href","App","authCookie","showPreloader","from","to","noThrow","default","subTitle","settings","handleActions","payload","base64","binary_string","window","atob","len","bytes","Uint8Array","charCodeAt","base64ToArrayBuffer","push","deviceInfoService","stack","preloaderStack","shift","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","reducer","reducers","devTools","process","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.04d3a981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elements.b15f934a.svg\";","export default [\n    {\n        name: 'Device Information Service',\n        uuid: 0x180a,\n        description: 'Exposes manufacturer and/or information about a device',\n        characteristics: [\n            {\n                name: 'Manufacturer Name String',\n                uuid: 0x2a29,\n                description: 'Represent the name of the manufacturer of device',\n                properties: ['read'],\n            },\n        ],\n    },\n    {\n        name: 'Battery Service',\n        uuid: 0x180f,\n        description:\n            'Exposes the Battery Level of a single battery or set of batteries in a device',\n        characteristics: [\n            {\n                name: 'Battery Level',\n                uuid: 0x2a19,\n                description: 'Represent level of the battery in a device',\n                properties: ['read', 'notify'],\n            },\n        ],\n    },\n    {\n        name: 'Data Transfer Service',\n        uuid: '5cf052d0-2403-4719-a558-b7e72c48112f',\n        description: 'Provide data receive and transmitting of a data',\n        characteristics: [\n            {\n                name: 'Data Receive',\n                uuid: '5cf052d1-2403-4719-a558-b7e72c48112f',\n                description: 'Receive data channel',\n                properties: ['write'],\n            },\n            {\n                name: 'Data Transmit',\n                uuid: '5cf052d2-2403-4719-a558-b7e72c48112f',\n                description: 'Transmit data channel',\n                properties: ['read', 'notify'],\n            },\n            {\n                name: 'Control Receive',\n                uuid: '5cf052d3-2403-4719-a558-b7e72c48112f',\n                description: 'Control data receive channel',\n                properties: ['write'],\n            },\n            {\n                name: 'Control Transmit',\n                uuid: '5cf052d4-2403-4719-a558-b7e72c48112f',\n                description: 'Control data transmit channel',\n                properties: ['read', 'notify'],\n            },\n            {\n                name: 'Status',\n                uuid: '5cf052d5-2403-4719-a558-b7e72c48112f',\n                description: 'Expose status of transfer data',\n                properties: ['write', 'read', 'notify'],\n            },\n        ],\n    },\n];\n\nexport const deviceInformationService = {\n    name: 'Device Information Service',\n    uuid: 0x180a,\n    description: 'Exposes manufacturer and/or information about a device',\n    characteristics: [\n        {\n            name: 'Manufacturer Name String',\n            uuid: 0x2a29,\n            description: 'Represent the name of the manufacturer of device',\n            properties: ['read'],\n        },\n    ],\n};\n\nexport const batteryService = {\n    name: 'Battery Service',\n    uuid: 0x180f,\n    description:\n        'Exposes the Battery Level of a single battery or set of batteries in a device',\n    characteristics: [\n        {\n            name: 'Battery Level',\n            uuid: 0x2a19,\n            description: 'Represent level of the battery in a device',\n            properties: ['read', 'notify'],\n        },\n    ],\n};\n\nexport const dataTransferService = {\n    name: 'Data Transfer Service',\n    uuid: '5cf052d0-2403-4719-a558-b7e72c48112f',\n    description: 'Provide data receive and transmitting of a data',\n    characteristics: [\n        {\n            name: 'Data Receive',\n            uuid: '5cf052d1-2403-4719-a558-b7e72c48112f',\n            description: 'Receive data channel',\n            properties: ['write'],\n        },\n        {\n            name: 'Data Transmit',\n            uuid: '5cf052d2-2403-4719-a558-b7e72c48112f',\n            description: 'Transmit data channel',\n            properties: ['read', 'notify'],\n        },\n        {\n            name: 'Control Receive',\n            uuid: '5cf052d3-2403-4719-a558-b7e72c48112f',\n            description: 'Control data receive channel',\n            properties: ['write'],\n        },\n        {\n            name: 'Control Transmit',\n            uuid: '5cf052d4-2403-4719-a558-b7e72c48112f',\n            description: 'Control data transmit channel',\n            properties: ['read', 'notify'],\n        },\n        {\n            name: 'Status',\n            uuid: '5cf052d5-2403-4719-a558-b7e72c48112f',\n            description: 'Expose status of transfer data',\n            properties: ['write', 'read', 'notify'],\n        },\n    ],\n};\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport _ from 'lodash';\nimport { writeStateToCookie, removeStateFromCookie } from '../utils/index';\nimport { dataTransferService } from '../servicesAndCharacteristics';\n\naxios.defaults.baseURL = 'https://portal.pipe.today/api';\n\n///////////////////////\n/////// other ////////\n/////////////////////\n\nexport const showAppPreloader = createAction('SHOW_APP_PRELOADER');\n\n///////////////////////\n//// auth actions ////\n/////////////////////\n\nexport const fetchTokenRequest = createAction('FETCH_TOKEN_REQUEST');\nexport const fetchTokenSuccess = createAction('FETCH_TOKEN_SUCCESS');\nexport const fetchTokenFailure = createAction('FETCH_TOKEN_FAILURE');\n\nexport const convertToken = (data, type, appId) => {\n    return (dispatch) => {\n        dispatch(fetchTokenRequest());\n\n        axios\n            .post('oauth/convert-token/', {\n                grant_type: 'convert_token',\n                client_id: appId,\n                backend: type,\n                token: data,\n            })\n            .then((response) => {\n                writeStateToCookie(\n                    response.data,\n                    'auth_cookie',\n                    response.data.expires_in\n                );\n                dispatch(fetchTokenSuccess(response.data));\n            })\n            .catch(() => {\n                dispatch(fetchTokenFailure());\n            });\n    };\n};\n\nexport const logoutRequest = createAction('LOGOUT_REQUEST');\nexport const logoutSuccess = createAction('LOGOUT_SUCCESS');\nexport const logoutFailure = createAction('LOGOUT_FAILURE');\n\nexport const logout = () => {\n    return (dispatch) => {\n        dispatch(logoutRequest());\n        try {\n            removeStateFromCookie('auth_cookie');\n            dispatch(logoutSuccess());\n        } catch (e) {\n            dispatch(logoutFailure());\n            console.error('logout', e.message);\n        }\n    };\n};\n\n///////////////////////\n////// recipes ///////\n/////////////////////\n\nexport const fetchRecipesRequest = createAction('FETCH_RECIPES_REQUEST');\nexport const fetchRecipesSuccess = createAction('FETCH_RECIPES_SUCCESS');\nexport const fetchRecipesFailure = createAction('FETCH_RECIPES_FAILURE');\n\nexport const recipe = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        axios\n            .get('recipe/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(fetchRecipesSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(fetchRecipesFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\n///////////////////////\n//////// user ////////\n/////////////////////\n\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\n\nexport const user = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n        axios\n            .get('user/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(fetchUserSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch((e) => {\n                dispatch(fetchUserFailure());\n                dispatch(showAppPreloader(false));\n\n                switch (e.response.status) {\n                    case 403:\n                        navigate('/');\n                        break;\n                    default:\n                        break;\n                }\n            });\n    };\n};\n\nexport const fetchUserDevicesRequest = createAction(\n    'FETCH_USER_DEVICES_REQUEST'\n);\nexport const fetchUserDevicesSuccess = createAction(\n    'FETCH_USER_DEVICES_SUCCESS'\n);\nexport const fetchUserDevicesFailure = createAction(\n    'FETCH_USER_DEVICES_FAILURE'\n);\n\nexport const userDevices = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchRecipesRequest());\n        dispatch(showAppPreloader(true));\n\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        axios\n            .get('user/devices/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(fetchUserDevicesSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(fetchUserDevicesFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const saveDeviceRequest = createAction('SAVE_DEVICE_REQUEST');\nexport const saveDeviceSuccess = createAction('SAVE_DEVICE_SUCCESS');\nexport const saveDeviceFailure = createAction('SAVE_DEVICE_FAILURE');\n\nexport const saveDevice = (device) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n            data: {\n                userDevices: { devices },\n            },\n        } = getState();\n\n        const newDevices = _.uniqBy(\n            [...devices, { name: device.name, uid: device.id }],\n            'name'\n        );\n\n        if (newDevices.length === devices.length) {\n            return false;\n        }\n\n        dispatch(saveDeviceRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .put(\n                'user/devices/',\n                { devices: newDevices },\n                {\n                    headers: {\n                        Authorization: `Bearer ${access_token}`,\n                    },\n                }\n            )\n            .then((response) => {\n                dispatch(saveDeviceSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(saveDeviceFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const removeDeviceRequest = createAction('REMOVE_DEVICE_REQUEST');\nexport const removeDeviceSuccess = createAction('REMOVE_DEVICE_SUCCESS');\nexport const removeDeviceFailure = createAction('REMOVE_DEVICE_FAILURE');\n\nexport const removeDevice = (uid) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n            data: {\n                userDevices: { devices },\n            },\n        } = getState();\n\n        const newDevices = devices.filter((device) => {\n            if (device.uid === uid) {\n                return false;\n            }\n            return true;\n        });\n\n        dispatch(saveDeviceRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .put(\n                'user/devices/',\n                { devices: newDevices },\n                {\n                    headers: {\n                        Authorization: `Bearer ${access_token}`,\n                    },\n                }\n            )\n            .then((response) => {\n                dispatch(removeDeviceSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(removeDeviceFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n\nexport const getBinaryRecipeRequest = createAction('GET_BINARY_RECIPE_REQUEST');\nexport const getBinaryRecipeSuccess = createAction('GET_BINARY_RECIPE_SUCCESS');\nexport const getBinaryRecipeFailure = createAction('GET_BINARY_RECIPE_FAILURE');\n\nexport const getBinaryRecipe = (recipeId) => {\n    return (dispatch, getState) => {\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        console.log('services', dataTransferService);\n\n        dispatch(getBinaryRecipeRequest());\n        dispatch(showAppPreloader(true));\n\n        axios\n            .get('recipe_binary/' + recipeId + '/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                dispatch(getBinaryRecipeSuccess(response.data));\n                dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                dispatch(getBinaryRecipeFailure());\n                dispatch(showAppPreloader(false));\n            });\n    };\n};\n","import Cookies from 'universal-cookie';\n\nexport const writeStateToCookie = (state, name, duration) => {\n    const cookies = new Cookies();\n    const expiresDate = new Date();\n    // expiresDate.setDate(expiresDate.getDate() + duration);\n    expiresDate.setSeconds(expiresDate.getSeconds() + duration);\n    cookies.set(name, JSON.stringify(state), {\n        path: '/',\n        expires: expiresDate,\n    });\n};\n\nexport const readStateFromCookie = (name) => {\n    const cookies = new Cookies();\n    return cookies.get(name);\n};\n\nexport const removeStateFromCookie = (name) => {\n    const cookies = new Cookies();\n    return cookies.remove(name);\n};\n\nexport const base64ToArrayBuffer = (base64) => {\n    var binary_string = window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n};\n","import React, { Component } from 'react';\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className=\"loader__container\">\n                <div className=\"loader\">\n                    <div className=\"lds-ripple\">\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GoogleLogin from 'react-google-login';\nimport * as actions from '../../actions';\n\n// const responseGoogle = (response, status) => {\n//     console.log(response, status);\n// };\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\nclass GoogleOauth extends Component {\n    responseGoogleRequest = () => {\n        // console.log(response, 'request');\n    };\n\n    responseGoogleSuccess = (response) => {\n        const { convertToken } = this.props;\n        convertToken(\n            response.accessToken,\n            'google-oauth2',\n            'h19R0p6UGmYKzuc4fg1uaPlHwXPOc8GktswMZEdu'\n        );\n    };\n\n    responseGoogleFailure = () => {\n        // console.log(response, 'failure');\n    };\n\n    render() {\n        return (\n            <GoogleLogin\n                // clientId=\"385449723022-vmed4lc1a8a1t3fsat4flujbobsblv01.apps.googleusercontent.com\"\n                clientId=\"205221816405-0lvlolma2t1lvif67t749qee7h9te473.apps.googleusercontent.com\"\n                // redirectUri=\"http://localhost:3000\"\n                buttonText=\"Login\"\n                onSuccess={this.responseGoogleSuccess}\n                onFailure={this.responseGoogleFailure}\n                onRequest={this.responseGoogleRequest}\n                cookiePolicy={'single_host_origin'}\n                className=\"google-oauth-btn\"\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(GoogleOauth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FacebookLogin from 'react-facebook-login';\nimport * as actions from '../../actions';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\n// window.onResponseFacebook = (response) => {\n//     console.log('response Facebook', response);\n// };\n\nclass FacebookOauth extends Component {\n    state = {\n        response: null,\n        failure: null,\n    };\n\n    responseFacebook = (response) => {\n        const { convertToken } = this.props;\n        this.setState({ response });\n        convertToken(\n            response.accessToken,\n            'facebook',\n            'h19R0p6UGmYKzuc4fg1uaPlHwXPOc8GktswMZEdu'\n        );\n    };\n\n    onFailure = (failure) => {\n        this.setState({ failure });\n    };\n\n    onResponseFacebook = (response) => {\n        console.log('response Facebook', response);\n    };\n\n    componentDidMount() {\n        // console.log('facebook', window.FB);\n        // window.FB.getLoginStatus(this.onResponseFacebook);\n        // window.FB.login();\n    }\n\n    render() {\n        // console.log('Facebook: ', window.FB);\n        return (\n            <>\n                <FacebookLogin\n                    appId=\"369580627566109\"\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={this.responseFacebook}\n                    onFailure={this.onFailure}\n                    textButton=\"Login\"\n                    // isMobile={false}\n                    redirectUri={'https://sashakrauzer.github.io/'}\n                    // disableMobileRedirect={true}\n                />\n                {/* <FacebookLogin\n                    appId=\"3315968511865055\"\n                    autoLoad={true}\n                    fields=\"name,email,picture\"\n                    callback={this.responseFacebook}\n                    onFailure={this.onFailure}\n                    textButton=\"Login\"\n                    // isMobile={false}\n                    // redirectUri={'https://sashakrauzer.github.io/'}\n                    disableMobileRedirect={true}\n                /> */}\n                {/* <div\n                    className=\"fb-login-button\"\n                    data-size=\"large\"\n                    data-button-type=\"login_with\"\n                    data-layout=\"default\"\n                    data-auto-logout-link=\"false\"\n                    data-use-continue-as=\"false\"\n                    data-width=\"\"\n                    // data-onlogin={this.onResponseFacebook}\n                    data-onlogin=\"onResponseFacebook();\"\n                ></div> */}\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(FacebookOauth);\n","import React, { Component } from 'react';\n\nimport GoogleOauth from '../../GoogleOauth/index.jsx';\nimport FacebookOauth from '../../FacebookOauth/index.jsx';\nimport logo from '../../../assets/images/elements.svg';\n\nclass Login extends Component {\n    render() {\n        // var isOpera =\n        //     (!!window.opr && !!window.opr.addons) ||\n        //     !!window.opera ||\n        //     navigator.userAgent.indexOf(' OPR/') >= 0;\n\n        // // Firefox 1.0+\n        // var isFirefox = typeof InstallTrigger !== 'undefined';\n\n        // // Safari 3.0+ \"[object HTMLElementConstructor]\"\n        // var isSafari =\n        //     /constructor/i.test(window.HTMLElement) ||\n        //     (function (p) {\n        //         return p.toString() === '[object SafariRemoteNotification]';\n        //     })(\n        //         !window['safari'] ||\n        //             (typeof safari !== 'undefined' &&\n        //                 window.safari.pushNotification)\n        //     );\n\n        // // Internet Explorer 6-11\n        // var isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n        // // Edge 20+\n        // var isEdge = !isIE && !!window.StyleMedia;\n\n        // // Chrome 1 - 79\n        // var isChrome =\n        //     !!window.chrome &&\n        //     (!!window.chrome.webstore || !!window.chrome.runtime);\n\n        // // Edge (based on chromium) detection\n        // var isEdgeChromium =\n        //     isChrome && navigator.userAgent.indexOf('Edg') !== -1;\n\n        // // Blink engine detection\n        // var isBlink = (isChrome || isOpera) && !!window.CSS;\n\n        // var output = 'Detecting browsers by ducktyping:<hr>';\n        // output += 'isFirefox: ' + isFirefox + '<br>';\n        // output += 'isChrome: ' + isChrome + '<br>';\n        // output += 'isSafari: ' + isSafari + '<br>';\n        // output += 'isOpera: ' + isOpera + '<br>';\n        // output += 'isIE: ' + isIE + '<br>';\n        // output += 'isEdge: ' + isEdge + '<br>';\n        // output += 'isEdgeChromium: ' + isEdgeChromium + '<br>';\n        // output += 'isBlink: ' + isBlink + '<br>';\n        // output += 'User Agent: ' + navigator.userAgent + '<br>';\n        const { isLogged } = this.props;\n        if (!isLogged) {\n            // dfsfds\n        }\n        return (\n            <div className=\"App\" path=\"/\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <div className=\"login-btn-wrap\">\n                        {!navigator.userAgent.includes('cider') ? (\n                            <GoogleOauth />\n                        ) : null}\n\n                        <FacebookOauth />\n                    </div>\n                    {/* <div dangerouslySetInnerHTML={{ __html: output }} /> */}\n                    {/* {output} */}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\n// import { navigate } from '@reach/router';\nimport _ from 'lodash';\n// import { writeStateToCookie } from '../utils/index';\nimport { dataTransferService } from '../servicesAndCharacteristics';\n\nimport { saveDevice } from './index';\n\naxios.defaults.baseURL = 'https://portal.pipe.today/api';\n\n///////////////////////\n///// Bluetooth //////\n/////////////////////\n\nexport const connectToDeviceRequest = createAction('CONNECT_TO_DEVICE_REQUEST');\nexport const connectToDeviceSuccess = createAction('CONNECT_TO_DEVICE_SUCCESS');\nexport const connectToDeviceFailure = createAction('CONNECT_TO_DEVICE_FAILURE');\n\n// Подключение к выбраному устройству\nexport const connectToDevice = (newFilters) => {\n    return (dispatch, getState) => {\n        const {\n            bluetooth: { devices: devicesFromStore },\n        } = getState();\n\n        dispatch(connectToDeviceRequest());\n\n        const filters = newFilters || [{ namePrefix: 'Pipe' }];\n        // const filters = newFilters || [{ namePrefix: 'Blue' }];\n        // const filters = newFilters;\n        navigator.bluetooth\n            .requestDevice({\n                acceptAllDevices: filters ? undefined : true,\n                filters,\n                optionalServices: [\n                    '5cf052d0-2403-4719-a558-b7e72c48112f',\n                    'battery_service',\n                    0x2a29,\n                    0x180a,\n                ],\n            })\n            .then((device) => {\n                if (\n                    _.find(\n                        devicesFromStore,\n                        (deviceFromStore) =>\n                            deviceFromStore.name === device.name\n                    )\n                ) {\n                    throw new Error('device has already been added');\n                } else {\n                    console.info(\n                        '%cconnected device:',\n                        'color:green; font-size:2em; border-top:10px solid red'\n                    );\n                    console.table(device);\n\n                    device.addEventListener('gattserverdisconnected', (event) =>\n                        dispatch(onDisconnected(event))\n                    );\n\n                    dispatch(connectToDeviceSuccess(device));\n                    dispatch(saveDevice(device));\n                    dispatch(connectToGATTServer(device));\n                }\n            })\n            .catch((error = { message: 'connectToDeviceFailure' }) => {\n                console.error(error.message);\n                dispatch(connectToDeviceFailure());\n            });\n    };\n};\n\nexport const deviceDisconnected = createAction('DEVICE_DISCONNECTED');\nexport const failedToReconnect = createAction('FAILED_TO_RECONNECT');\nexport const deviceConnecting = createAction('DEVICE_CONNECTING');\nexport const deviceReconnected = createAction('DEVICE_RECONNECTED');\n\n// Обработчик события отключения устройства\nexport const onDisconnected = (event) => {\n    return (dispatch) => {\n        dispatch(deviceDisconnected());\n\n        const device = event.target;\n\n        console.log(`Device ${device.name} is disconnected.`);\n        // console.table(event);\n\n        dispatch(connectToGATTServer(device));\n    };\n};\n\nexport const connectGattRequest = createAction('CONNECT_GATT_REQUEST');\nexport const connectGattSuccess = createAction('CONNECT_GATT_SUCCESS');\nexport const connectGattFailure = createAction('CONNECT_GATT_FAILURE');\n\n// Подключение к GATT серверу выбранного устройства\nexport const connectToGATTServer = (device) => {\n    return (dispatch) => {\n        // dispatch(connectGattRequest());\n        // device.gatt\n        //     .connect()\n        //     .then((server) => {\n        //         console.info(\n        //             '%cGATT server:',\n        //             'color:green; font-size:2em; border-top:10px solid red'\n        //         );\n        //         console.table(server);\n\n        //         dispatch(connectGattSuccess({ server, device }));\n        //     })\n        //     .catch(() => {\n        //         console.error('connectGattFailure');\n        //         dispatch(connectGattFailure());\n        //     });\n\n        connect();\n\n        function connect() {\n            exponentialBackoff(\n                3 /* max retries */,\n                2 /* seconds delay */,\n                function toTry() {\n                    dispatch(connectGattRequest({ device }));\n                    time('Connecting to Bluetooth Device... ');\n                    return device.gatt.connect();\n                },\n                function success(server) {\n                    console.info(\n                        '%cGATT server:',\n                        'color:green; font-size:2em; border-top:10px solid red'\n                    );\n                    console.table(server);\n\n                    dispatch(connectGattSuccess({ server, device }));\n                },\n                function fail() {\n                    dispatch(connectGattFailure({ device }));\n                    time('Failed to connect.');\n                }\n            );\n        }\n\n        function exponentialBackoff(max, delay, toTry, success, fail) {\n            toTry()\n                .then((server) => success(server))\n                .catch(() => {\n                    if (max === 0) {\n                        return fail();\n                    }\n                    time(\n                        'Retrying in ' + delay + 's... (' + max + ' tries left)'\n                    );\n                    setTimeout(function () {\n                        exponentialBackoff(\n                            --max,\n                            delay * 2,\n                            toTry,\n                            success,\n                            fail\n                        );\n                    }, delay * 1000);\n                });\n        }\n\n        function time(text) {\n            console.log('[' + new Date().toJSON().substr(11, 8) + '] ' + text);\n        }\n    };\n};\n\nexport const disconnectGattServer = (device) => {\n    return () => {\n        // console.log('disconnectGattServer', device);\n        device.device.gatt.disconnect();\n    };\n};\n\nexport const fetchBatteryServiceRequest = createAction(\n    'FETCH_BATTERY_SERVICE_REQUEST'\n);\nexport const fetchBatteryServiceSuccess = createAction(\n    'FETCH_BATTERY_SERVICE_SUCCESS'\n);\nexport const fetchBatteryServiceFailure = createAction(\n    'FETCH_BATTERY_SERVICE_FAILURE'\n);\n\nexport const fetchBatteryCharacteristicSuccess = createAction(\n    'FETCH_BATTERY_CHARACTERISTIC_SUCCESS'\n);\n\nexport const batteryService = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchBatteryServiceRequest());\n\n        const {\n            bluetooth: { server },\n        } = getState();\n\n        server\n            .getPrimaryService('battery_service')\n            .then((service) => {\n                dispatch(fetchBatteryServiceSuccess());\n                return service.getCharacteristic('battery_level');\n            })\n            .catch(() => {\n                dispatch(fetchBatteryServiceFailure());\n            })\n            .then((characteristic) => {\n                if (characteristic) {\n                    characteristic.startNotifications();\n                    characteristic.addEventListener(\n                        'characteristicvaluechanged',\n                        handleBatteryLevelChange\n                    );\n                    return characteristic.readValue();\n                }\n                throw new Error('characteristic baterry level not found');\n            })\n            .then((value) => {\n                dispatch(\n                    fetchBatteryServiceSuccess({ level: value.getUint8(0) })\n                );\n            })\n            .catch(() => {});\n\n        function handleBatteryLevelChange(event) {\n            dispatch(\n                fetchBatteryServiceSuccess({\n                    level: event.target.value.getUint8(0),\n                })\n            );\n        }\n    };\n};\n\nexport const fetchDeviceInfoRequest = createAction('FETCH_DEVICE_INFO_REQUEST');\nexport const fetchDeviceInfoSuccess = createAction('FETCH_DEVICE_INFO_SUCCESS');\nexport const fetchDeviceInfoFailure = createAction('FETCH_DEVICE_INFO_FAILURE');\n\nexport const fetchDeviceInfoCharacteristicSuccess = createAction(\n    'FETCH_DEVICE_INFO_CHARACTERISTIC_SUCCESS'\n);\n\nexport const deviceInfoService = () => {\n    return (dispatch, getState) => {\n        dispatch(fetchDeviceInfoRequest());\n\n        const {\n            bluetooth: { server },\n        } = getState();\n\n        server\n            .getPrimaryService(0x180a)\n            .then((service) => {\n                dispatch(fetchDeviceInfoSuccess());\n                return service.getCharacteristic(0x2a29);\n            })\n            .catch(() => {\n                dispatch(fetchDeviceInfoFailure());\n            })\n            .then((characteristic) => {\n                if (characteristic) {\n                    return characteristic.readValue();\n                }\n                throw new Error('characteristic manufacturerName not found');\n            })\n            .then((value) => {\n                dispatch(\n                    fetchDeviceInfoCharacteristicSuccess({\n                        manufacturerName: value.getUint8(0),\n                    })\n                );\n            })\n            .catch(() => {});\n    };\n};\n\nexport const writeRecipeToDeviceRequest = createAction(\n    'WRITE_RECIPE_TO_DEVICE_REQUEST'\n);\nexport const writeRecipeToDeviceSuccess = createAction(\n    'WRITE_RECIPE_TO_DEVICE_SUCCESS'\n);\nexport const writeRecipeToDeviceFailure = createAction(\n    'WRITE_RECIPE_TO_DEVICE_FAILURE'\n);\n\nexport const recipeByteTransfered = createAction('RECIPE_BYTE_TRANSFERED');\n\nlet keyI = 0;\nlet characteristicWrite = null;\n\nexport const writeRecipeToDevice = () => {\n    return (dispatch, getState) => {\n        const {\n            bluetooth: { server },\n            data: { recipeBinary },\n        } = getState();\n\n        let service = null;\n\n        // connect to service\n\n        server\n            .getPrimaryService(dataTransferService.uuid)\n            .then((ser) => {\n                service = ser;\n                return service.getCharacteristic(\n                    '5cf052d4-2403-4719-a558-b7e72c48112f'\n                );\n            })\n            .then((characteristic) => {\n                return characteristic.startNotifications();\n            })\n            .then((characteristic) => {\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    handleResponseControlMsg\n                );\n                console.log('Подписка на Control Transmit');\n\n                return service.getCharacteristic(\n                    '5cf052d3-2403-4719-a558-b7e72c48112f'\n                );\n            })\n            .then((characteristic) => {\n                console.log('characteristic Control Receive');\n                let buffer = new ArrayBuffer(20);\n                let msgKeyWord8 = 0x0a;\n                let operationCode = 0xff;\n                let dataSize32 = 0x2334;\n                let dataType16 = 0x6;\n\n                new DataView(buffer).setInt8(0, msgKeyWord8, true);\n                new DataView(buffer).setInt8(1, operationCode, true);\n                new DataView(buffer).setInt32(2, dataSize32, true);\n                new DataView(buffer).setInt16(6, dataType16, true);\n                console.log('Control Receive', new DataView(buffer).getInt8(0));\n                characteristic.writeValue(new Int8Array(buffer));\n            })\n            .catch((error) => {\n                alert(error);\n            });\n\n        function handleResponseControlMsg(event) {\n            let status = event.target.value.getUint8(0);\n            console.log('handleResponseControlMsg', 0x0a === status, status);\n            if (0x0a === status) {\n                service\n                    .getCharacteristic('5cf052d5-2403-4719-a558-b7e72c48112f')\n                    .then((characteristic) => {\n                        characteristic.startNotifications();\n                        characteristic.addEventListener(\n                            'characteristicvaluechanged',\n                            handleLevelChanged\n                        );\n                        return service.getCharacteristic(\n                            '5cf052d1-2403-4719-a558-b7e72c48112f'\n                        );\n                    })\n                    .then((characteristic) => {\n                        characteristicWrite = characteristic;\n\n                        sendingData();\n                    });\n            } else if (0x0f === status) {\n                console.log('Recipe did saved');\n            } else {\n                console.log('');\n            }\n        }\n\n        function handleLevelChanged(event) {\n            let value = event.target.value;\n            console.log('handleStatusChanged', value, value.getUint8(0));\n            sendingData();\n        }\n\n        async function sendingData() {\n            console.log(\n                'sendingData...'\n                // recipeBinary.buffer,\n                // characteristicWrite\n            );\n\n            for (\n                let sum = 0;\n                keyI < recipeBinary.buffer.byteLength && sum < 400;\n                keyI = keyI + 20, sum = sum + 20\n            ) {\n                await characteristicWrite.writeValue(\n                    recipeBinary.buffer.slice(keyI, keyI + 20)\n                );\n                dispatch(\n                    recipeByteTransfered(\n                        recipeBinary.buffer.slice(keyI, keyI + 20).byteLength\n                    )\n                );\n                console.log(\n                    'DataBuffer',\n                    recipeBinary.buffer.slice(keyI, keyI + 20)\n                );\n            }\n\n            // for (let i = 0; keyI < buffer.byteLength; i++) {\n            //     result = await characteristicWrite.writeValue(\n            //         buffer.slice(keyI, keyI + 20)\n            //     );\n            //     keyI = keyI + 20;\n            //     console.log('sendingData', result);\n            //     break;\n            // }\n        }\n    };\n};\n","import React, { Component } from 'react';\n// import { connectWB } from './service';\nimport { connect } from 'react-redux';\n// import * as actions from '../../actions';\nimport {\n    connectToDevice,\n    batteryService as batteryServiceAction,\n    deviceInfoService as deviceInfoServiceAction,\n    writeRecipeToDevice,\n} from '../../actions/bluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data: { recipeBinary },\n        data,\n        bluetooth,\n        bluetooth: { device, server },\n    } = state;\n    return {\n        token,\n        device,\n        bluetooth,\n        server,\n        recipeBinary,\n        data,\n    };\n};\n\nconst actionCreators = {\n    connectToDevice,\n    batteryServiceAction,\n    deviceInfoServiceAction,\n    writeRecipeToDevice,\n};\n\nclass WebBluetooth extends Component {\n    state = {\n        bluetoothDevice: null,\n        batteryLevelCharacteristic: null,\n        gattServer: null,\n        transferService: null,\n        characteristic: null,\n    };\n\n    connectToDevice = () => {\n        navigator.bluetooth\n            .requestDevice({\n                // acceptAllDevices: true,\n                filters: [\n                    { name: 'BlueNRG' },\n                    // { name: 'JUST-ASUS' },\n                    { services: ['5cf052d0-2403-4719-a558-b7e72c48112f'] },\n                    // { services: ['00001800-0000-1000-8000-00805f9b34fb'] },\n                ],\n                optionalServices: ['5cf052d0-2403-4719-a558-b7e72c48112f'],\n            })\n            .then((device) => {\n                console.log('device', device);\n                this.setState({ bluetoothDevice: device });\n                this.state.bluetoothDevice.addEventListener(\n                    'gattserverdisconnected',\n                    this.onDisconnected\n                );\n            })\n            .catch((error) => {\n                // alert(error);\n                console.log('error', error);\n            });\n    };\n\n    // onDisconnected() {\n    //     // console.log('> Bluetooth Device disconnected');\n    //     // connectDeviceAndCacheCharacteristics().catch((error) => {\n    //     //     console.log('Argh! ' + error);\n    //     // });\n    // }\n\n    // disconnect = () => {\n    //     bluetoothDevice.gatt.disconnect();\n    // };\n\n    connect() {\n        // console.log('Connecting to Bluetooth Device...');\n        return this.state.bluetoothDevice.gatt\n            .connect()\n            .then((server) => {\n                console.log('server', server);\n\n                this.setState({ gattServer: server });\n            })\n            .catch((error) => {\n                alert(error);\n                // console.log('error', error);\n            });\n    }\n\n    serviceConnect = (uuid) => {\n        const { server } = this.props;\n        console.log('serviceConnect', server);\n        server\n            .getPrimaryService(uuid)\n            .then((service) => {\n                console.log('service', service);\n                this.setState({ transferService: service });\n\n                // return service.getCharacteristic(StatusCharacteristicUuid);\n            })\n            .catch((error) => {\n                alert(error);\n                // console.log('error', error);\n            });\n    };\n\n    CtrlRxCharacteristicUuid = () => {\n        let buffer = new ArrayBuffer(20);\n        let msgKeyWord8 = 0x0a;\n        let operationCode = 0xff;\n        let dataSize32 = 800;\n        let dataType16 = 0x0006;\n\n        new DataView(buffer).setInt8(0, msgKeyWord8);\n        new DataView(buffer).setInt8(1, operationCode);\n        new DataView(buffer).setInt32(2, dataSize32);\n        new DataView(buffer).setInt16(6, dataType16);\n\n        console.log('BUFFER', buffer, new DataView(buffer));\n        this.state.transferService\n            .getCharacteristic('5cf052d3-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Control Receive');\n                return characteristic.writeValue(buffer);\n            })\n            .then((value) => {\n                console.log('Control Receive value: ', value);\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    sendDataToDevice = () => {\n        let buffer = new ArrayBuffer(20);\n        new DataView(buffer).setInt32(0, 6000);\n        this.state.transferService\n            .getCharacteristic('5cf052d1-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Data Receive', buffer);\n\n                let result = null;\n                async function sendingData() {\n                    for (let i = 0; i < 800; i = i + 20) {\n                        result = await characteristic.writeValue(buffer);\n                        console.log('sendingData', result);\n                    }\n                }\n                sendingData();\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    CtrlTxCharacteristicUuid = () => {\n        this.state.transferService\n            .getCharacteristic('5cf052d4-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                return characteristic.startNotifications();\n            })\n            .then((characteristic) => {\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleResponseControlMsg\n                );\n                console.log('Подписка на Control Transmit');\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    StatusCharacteristicUuid = () => {\n        this.state.transferService\n            .getCharacteristic('5cf052d5-2403-4719-a558-b7e72c48112f')\n            .then((characteristic) => {\n                console.log('characteristic Статус', characteristic);\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('Статус value: ', value);\n            });\n    };\n\n    batteryLevel = () => {\n        this.state.transferService\n            .getCharacteristic('battery_level')\n            .then((characteristic) => {\n                console.log('characteristic Статус', characteristic);\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('Заряд батареи', value.buffer);\n                // console.log('Battery percentage is ' + value.getUint8(0));\n            });\n    };\n\n    handleResponseControlMsg(event) {\n        let status = event.target.value.getUint8(0);\n        console.log('handleResponseControlMsg', 0x0a === status);\n        // console.log('Event - Battery percentage is ' + batteryLevel);\n    }\n\n    handleLevelChanged(event) {\n        let batteryLevel = event.target.value;\n        console.log('handleStatusChanged', batteryLevel, batteryLevel.buffer);\n        // console.log('Event - Battery percentage is ' + batteryLevel);\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            bluetooth: { device, server, batteryService },\n            batteryServiceAction,\n        } = this.props;\n        if (device && server && !batteryService) {\n            console.info(\n                '%cNeed request battery service...',\n                'border: 1px dashed gray; font-size: 1.5em; padding: 5px'\n            );\n            batteryServiceAction();\n        }\n        // if (device && server && !deviceInfoService) {\n        //     console.log('Need request device info service');\n        //     deviceInfoServiceAction();\n        // }\n\n        const { recipeBinary, writeRecipeToDevice } = this.props;\n        if (recipeBinary !== prevProps.recipeBinary) {\n            console.log('Recipe binary not same');\n            if (recipeBinary.binary_recipe) {\n                // writeToDevice\n                writeRecipeToDevice();\n            }\n        }\n    }\n\n    render() {\n        // const { device, recipeBinary } = this.props;\n        // if (device) {\n        //     console.log('Added device: ', device);\n        // }\n        // console.log('webbluetooth render', recipeBinary);\n        // if (recipeBinary) {\n        //     console.log('recipeBinary', recipeBinary.buffer);\n        // }\n        return (\n            <div>\n                {/* <p>\n                    {this.state.bluetoothDevice &&\n                        'Подключено устройство: ' +\n                            this.state.bluetoothDevice.name}\n                </p>\n                <button\n                    onClick={() => connectToDevice()}\n                    // className={'bluetooth__connect-btn'}\n                >\n                    Add device\n                </button>\n                <br />\n                <br />\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.connect();\n                    }}\n                >\n                    Подключиться к серверу гатт\n                </button>\n                <br />\n                <br />\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.serviceConnect(\n                            '5cf052d0-2403-4719-a558-b7e72c48112f'\n                        );\n                    }}\n                >\n                    Подключиться к DataTransferService\n                </button>\n\n                <button\n                    onClick={() => {\n                        // connectWB(this.state.bluetoothDevice);\n                        this.serviceConnect('battery_service');\n                    }}\n                >\n                    Подключиться к Baterry service\n                </button>\n                <br />\n                <br />\n                <ul>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.CtrlRxCharacteristicUuid();\n                            }}\n                        >\n                            Отправить control message\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.CtrlTxCharacteristicUuid();\n                            }}\n                        >\n                            Подписаться на ответ control message\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.StatusCharacteristicUuid();\n                            }}\n                        >\n                            Посмотреть сколько принято байт во время передачи\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.batteryLevel();\n                            }}\n                        >\n                            Узнать уровень заряда батареи\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={() => {\n                                // connectWB(this.state.bluetoothDevice);\n                                this.sendDataToDevice();\n                            }}\n                        >\n                            Send data to device\n                        </button>\n                    </li>\n                </ul> */}\n                {/* <button onClick={this.disconnect}>Дисконект</button>\n                <button onClick={this.onReconnectButtonClick}>Reconect</button> */}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(WebBluetooth);\n","import React, { Component } from 'react';\nimport { Card, Button, Divider, Progress, Modal } from 'antd';\nimport {\n    PlusCircleOutlined,\n    CloseCircleOutlined,\n    CheckCircleTwoTone,\n    LoadingOutlined,\n} from '@ant-design/icons';\n\nclass Device extends Component {\n    componentDidUpdate = (prevProps) => {\n        const { connectedDevice } = this.props;\n        if (\n            connectedDevice &&\n            connectedDevice.GATTDisconnected &&\n            prevProps.connectedDevice &&\n            prevProps.connectedDevice.GATTDisconnected\n        ) {\n            console.log('componentDidUpdate');\n            Modal.error({\n                title: 'Failed to reconnect',\n                content: 'Please try again later',\n            });\n        }\n    };\n\n    render() {\n        const {\n            device,\n            connected,\n            connectToDevice,\n            removeDevice,\n            batteryService,\n            showDrawer,\n            byteTransfered,\n            server,\n            GATTConnected,\n            disconnectGattServer,\n            connectedDevice,\n            connectionRequest,\n        } = this.props;\n\n        let deviceState = '';\n        if (GATTConnected) {\n            deviceState = 'online';\n        } else {\n            if (connectionRequest) {\n                deviceState = 'connecting...';\n            } else {\n                deviceState = 'offline';\n            }\n        }\n\n        if (!connected) {\n            return (\n                <Card\n                    title={\n                        <>\n                            <Divider type=\"vertical\" />\n                            <span>{device.name}</span>\n                        </>\n                    }\n                    extra={\n                        <div>\n                            <Button\n                                style={{ color: 'red' }}\n                                shape=\"circle\"\n                                icon={\n                                    <CloseCircleOutlined twoToneColor=\"#52c41a\" />\n                                }\n                                onClick={() => removeDevice(device.uid)}\n                            />\n                        </div>\n                    }\n                    style={{ width: 300 }}\n                >\n                    <p>\n                        <strong>Device: </strong>\n                        {deviceState}\n                    </p>\n                    <p>\n                        <strong>UID:</strong> {device.uid}\n                    </p>\n                    <Button\n                        shape=\"circle\"\n                        icon={<PlusCircleOutlined />}\n                        onClick={() => connectToDevice([{ name: device.name }])}\n                    />\n                </Card>\n            );\n        }\n\n        return (\n            <Card\n                title={\n                    <>\n                        {GATTConnected && (\n                            <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                        )}\n                        {connectionRequest && (\n                            <LoadingOutlined twoToneColor=\"#52c41a\" />\n                        )}\n                        <Divider type=\"vertical\" />\n                        <span>{device.name}</span>\n                    </>\n                }\n                extra={\n                    <div>\n                        <Button\n                            // type=\"primary\"\n                            style={{ color: 'red' }}\n                            shape=\"circle\"\n                            icon={<CloseCircleOutlined />}\n                            onClick={() => removeDevice(device.uid)}\n                        />\n                    </div>\n                }\n                style={{ width: 300 }}\n            >\n                <p>\n                    <strong>Device: </strong>\n                    {deviceState}\n                </p>\n                <p>\n                    {GATTConnected && (\n                        <button\n                            onClick={() =>\n                                disconnectGattServer(connectedDevice)\n                            }\n                        >\n                            Отключиться\n                        </button>\n                    )}\n                </p>\n                <p>\n                    <strong>UID:</strong> {device.uid}\n                </p>\n                {batteryService && Number.isInteger(batteryService.level) && (\n                    <p>\n                        <strong>Battery level: </strong>\n                        {batteryService.level}\n                    </p>\n                )}\n\n                {server && (\n                    <Button onClick={showDrawer}>Add recipe to device</Button>\n                )}\n                {byteTransfered ? (\n                    <Progress\n                        type=\"circle\"\n                        percent={Math.floor((byteTransfered * 100) / 9012)}\n                        width={40}\n                    />\n                ) : (\n                    ''\n                )}\n            </Card>\n        );\n    }\n}\n\nexport default Device;\n","import React, { Component } from 'react';\nimport { Row, Button, Tooltip, Divider } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n// import _ from 'lodash';\nimport * as actions from '../../../actions';\nimport {\n    connectToDevice,\n    disconnectGattServer,\n} from '../../../actions/bluetooth';\nimport WebBluetooth from '../../WebBluetooth';\nimport Device from './Device';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data,\n        data: { byteTransfered },\n        bluetooth: {\n            device,\n            server,\n            batteryService,\n            devices: connectedDevices,\n        },\n    } = state;\n    return {\n        token,\n        data,\n        device,\n        connectedDevices,\n        server,\n        batteryService,\n        byteTransfered,\n    };\n};\n\nconst actionCreators = {\n    recipe: actions.recipe,\n    user: actions.user,\n    connectToDevice,\n    removeDevice: actions.removeDevice,\n    disconnectGattServer,\n};\n\nclass Devices extends Component {\n    render() {\n        const {\n            connectToDevice,\n            removeDevice,\n            connectedDevices,\n            showDrawer,\n            server,\n            batteryService,\n            byteTransfered,\n            disconnectGattServer,\n        } = this.props;\n        let devices =\n            this.props.devices &&\n            this.props.devices.map((device) => {\n                return (\n                    <Device\n                        key={device.uid}\n                        connected={\n                            !!connectedDevices.find(\n                                (connectedDevice) =>\n                                    connectedDevice.name === device.name\n                            )\n                        }\n                        GATTConnected={\n                            !!connectedDevices.find(\n                                (connectedDevice) =>\n                                    connectedDevice.name === device.name &&\n                                    connectedDevice.server &&\n                                    connectedDevice.server.connected\n                            )\n                        }\n                        device={device}\n                        connectedDevice={connectedDevices.find(\n                            (connectedDevice) =>\n                                connectedDevice.name === device.name\n                        )}\n                        connectToDevice={connectToDevice}\n                        removeDevice={removeDevice}\n                        batteryService={batteryService}\n                        showDrawer={showDrawer}\n                        byteTransfered={byteTransfered}\n                        server={server}\n                        disconnectGattServer={disconnectGattServer}\n                        connectionRequest={\n                            !!connectedDevices.find(\n                                (connectedDevice) =>\n                                    connectedDevice.name === device.name &&\n                                    connectedDevice.connectionRequest\n                            )\n                        }\n                    />\n                );\n            });\n        return (\n            <>\n                <Row gutter={16}>{devices || ''}</Row>\n                <Divider />\n                <Tooltip title=\"Add device\">\n                    <Button\n                        shape=\"circle\"\n                        icon={<PlusCircleOutlined />}\n                        onClick={() => connectToDevice()}\n                    />\n                </Tooltip>\n                <WebBluetooth />\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Devices);\n","import React, { Component } from 'react';\nimport { Card, Row, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport * as bluetoothActions from '../../../actions/bluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    writeRecipeToDevice: bluetoothActions.writeRecipeToDevice,\n    getBinaryRecipe: actions.getBinaryRecipe,\n};\n\nclass Recipes extends Component {\n    render() {\n        const { onClose, getBinaryRecipe } = this.props;\n        let recipes = this.props.recipes.map((recipe) => {\n            return (\n                // <Col span={6} key={recipe.id}>\n                <Card\n                    key={recipe.id}\n                    title={recipe.name + ' - id' + recipe.id + ''}\n                    // extra={<a href=\"#\">More</a>}\n                    style={{ width: 250 }}\n                    cover={<img alt=\"example\" src={recipe.image} />}\n                    className=\"recipe__card\"\n                >\n                    <p>{recipe.description_text}</p>\n                    {this.props.buttonVisible && (\n                        <Button\n                            onClick={() => {\n                                onClose();\n                                getBinaryRecipe(recipe.id);\n                            }}\n                        >\n                            Add\n                        </Button>\n                    )}\n                </Card>\n                // </Col>\n            );\n        });\n        // console.log('fsadasd', recipes);\n        return <Row gutter={16}>{recipes}</Row>;\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Recipes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, PageHeader, Drawer } from 'antd';\nimport { AntDesignOutlined, ReadOutlined } from '@ant-design/icons';\n\nimport './account.scss';\n\nimport * as actions from '../../../actions';\nimport Devices from './Devices';\nimport Recipes from './Recipes';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data,\n    } = state;\n    return {\n        token,\n        data,\n    };\n};\n\nconst actionCreators = {\n    // convertToken: actions.convertToken,\n    recipe: actions.recipe,\n    user: actions.user,\n    userDevices: actions.userDevices,\n    logout: actions.logout,\n};\n\nclass Account extends Component {\n    state = {\n        current: 'devices',\n        showDrawer: false,\n    };\n\n    showDrawer = () => {\n        this.setState({ showDrawer: true });\n    };\n\n    onClose = () => {\n        this.setState({ showDrawer: false });\n    };\n\n    handleClick = (e) => {\n        // console.log('click ', e);\n        this.setState({ current: e.key });\n    };\n\n    componentDidMount() {\n        const { recipe, user, userDevices } = this.props;\n        // console.log('didMount');\n        recipe();\n        user();\n        userDevices();\n    }\n\n    render() {\n        const { current } = this.state;\n        const {\n            data: { user, recipe, userDevices },\n            logout,\n        } = this.props;\n        // console.log('account', user);\n        return (\n            <>\n                <div className=\"elements__account\">\n                    <PageHeader\n                        title={\n                            <div className=\"account-header\">\n                                {user && user.first_name + ' ' + user.last_name}\n                                <button onClick={logout}>Logout</button>\n                            </div>\n                        }\n                    >\n                        <Menu\n                            onClick={this.handleClick}\n                            selectedKeys={[current]}\n                            mode=\"horizontal\"\n                        >\n                            <Menu.Item\n                                key=\"devices\"\n                                icon={<AntDesignOutlined />}\n                            >\n                                My devices\n                            </Menu.Item>\n                            <Menu.Item key=\"recipes\" icon={<ReadOutlined />}>\n                                Recipes\n                            </Menu.Item>\n                        </Menu>\n                        {/* <WebBluetooth /> */}\n                    </PageHeader>\n                    {this.state.current === 'devices' ? (\n                        <Devices\n                            devices={userDevices && userDevices.devices}\n                            showDrawer={this.showDrawer}\n                        />\n                    ) : (\n                        <Recipes\n                            recipes={recipe}\n                            buttonVisible={true}\n                            onClose={this.onClose}\n                        />\n                    )}\n                    <Drawer\n                        title=\"Recipes\"\n                        width={640}\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.showDrawer}\n                    >\n                        <Recipes\n                            recipes={recipe}\n                            buttonVisible={true}\n                            onClose={this.onClose}\n                        />\n                    </Drawer>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Account);\n","import React, { Component } from 'react';\nimport { Result, Button } from 'antd';\n\nclass BluetoothNotAvailable extends Component {\n    render() {\n        return (\n            <Result\n                title={<h1>Your browser is not supported Web Bluetooth</h1>}\n                extra={\n                    <Button\n                        type=\"primary\"\n                        key=\"console\"\n                        href=\"https://www.google.com/chrome/\"\n                    >\n                        Download Google Chrome\n                    </Button>\n                }\n            />\n        );\n    }\n}\n\nexport default BluetoothNotAvailable;\n","import React, { Component } from 'react';\nimport { Router, Link, Redirect, navigate } from '@reach/router';\nimport { connect } from 'react-redux';\nimport { Result, Button } from 'antd';\n\nimport * as actions from './actions';\nimport { readStateFromCookie } from './utils';\nimport 'antd/dist/antd.css';\nimport './App.scss';\nimport Loader from './components/Loader';\n// import WebBluetooth from './WebBluetooth';\n// import GoogleOauth from './components/GoogleOauth';\nimport Login from './components/routes/Login';\nimport Account from './components/routes/Account';\nimport BluetoothNotAvailable from './components/routes/BluetoothNotAvailable';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { cookie },\n        settings: { showPreloader },\n    } = state;\n    return {\n        cookie,\n        showPreloader,\n    };\n};\n\nconst actionCreators = {\n    fetchTokenSuccess: actions.fetchTokenSuccess,\n};\n\nclass App extends Component {\n    componentWillMount() {\n        const { fetchTokenSuccess } = this.props;\n        const authCookie = readStateFromCookie('auth_cookie');\n        // Проверяем наличии куки авторизации\n        if (authCookie) {\n            console.info(\n                '%ccookie:',\n                'color:green; font-size:2em; border-top:10px solid red'\n            );\n            console.table(authCookie);\n            fetchTokenSuccess(authCookie);\n        }\n    }\n\n    render() {\n        const { cookie, showPreloader } = this.props;\n        // navigator.bluetooth.getAvailability().then((available) => {\n        //     if (available) console.log('This device supports Bluetooth!');\n        //     else console.log('Doh! Bluetooth is not supported');\n        // });\n        // navigator.bluetooth.onavailabilitychanged = function (event) {\n        //     console.log('availabilitychanged', event);\n        // };\n        // const bluetoothIsAvailable = !!navigator.bluetooth;\n\n        // if (!navigator.bluetooth) {\n        //     navigate('/bluetooth-not-available');\n        // }\n\n        if (!cookie.access_token) {\n            navigate('/');\n        }\n\n        return (\n            <>\n                {showPreloader && <Loader />}\n                {/* <Router basepath=\"elements\"> */}\n                <Router>\n                    {/* {!bluetoothIsAvailable ? (\n                        <Redirect\n                            // from=\"*\"\n                            to=\"bluetooth-not-available\"\n                            noThrow\n                        />\n                    ) : null} */}\n\n                    {cookie.access_token && (\n                        <Redirect from=\"/\" to=\"account\" noThrow />\n                    )}\n\n                    <Login path=\"/\" />\n                    <Account path=\"account\" />\n                    <BluetoothNotAvailable path=\"bluetooth-not-available\" />\n\n                    <Result\n                        default\n                        status=\"404\"\n                        title=\"404\"\n                        subTitle=\"Sorry, the page you visited does not exist.\"\n                        extra={\n                            <Button type=\"primary\">\n                                <Link to=\"/\">Back Home</Link>\n                            </Button>\n                        }\n                    />\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import auth from './auth';\nimport data from './data';\nimport bluetooth from './bluetooth';\nimport settings from './settings';\n\nexport default {\n    auth,\n    data,\n    bluetooth,\n    settings,\n};\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.fetchTokenSuccess](state, { payload }) {\n            return {\n                ...state,\n                cookie: payload,\n            };\n        },\n        [actions.logoutSuccess](state) {\n            return {\n                ...state,\n                cookie: {},\n            };\n        },\n    },\n    {\n        cookie: {},\n    }\n);\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport * as bluetoothActions from '../actions/bluetooth';\nimport { base64ToArrayBuffer } from '../utils';\n\nexport default handleActions(\n    {\n        [actions.fetchRecipesSuccess](state, { payload }) {\n            // console.log('fetchRecipesSuccess', payload);\n            return {\n                ...state,\n                recipe: payload,\n            };\n        },\n        [actions.fetchUserSuccess](state, { payload }) {\n            // console.log('fetchUserSuccess', payload);\n            return {\n                ...state,\n                user: payload,\n            };\n        },\n        [actions.fetchUserDevicesSuccess](state, { payload }) {\n            // console.log('fetchUserDevicesSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n        [actions.getBinaryRecipeSuccess](state, { payload }) {\n            // console.log('fetchUserDevicesSuccess', payload);\n            let buffer = base64ToArrayBuffer(payload.binary_recipe);\n            return {\n                ...state,\n                recipeBinary: { ...payload, buffer },\n            };\n        },\n        [bluetoothActions.recipeByteTransfered](state, { payload }) {\n            return {\n                ...state,\n                byteTransfered: state.byteTransfered + payload,\n            };\n        },\n        [actions.saveDeviceSuccess](state, { payload }) {\n            // console.log('saveDeviceSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n        [actions.removeDeviceSuccess](state, { payload }) {\n            // console.log('removeDeviceSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n    },\n    {\n        recipe: [],\n        user: null,\n        userDevices: null,\n        recipeBinary: null,\n        byteTransfered: 0,\n    }\n);\n","import { handleActions } from 'redux-actions';\n// import * as actions from '../actions';\nimport * as bluetoothActions from '../actions/bluetooth';\n// import _ from 'lodash';\n\nexport default handleActions(\n    {\n        [bluetoothActions.connectToDeviceSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            let newDevices = state.devices.slice();\n            newDevices.push({\n                id: payload.id,\n                name: payload.name,\n                device: payload,\n            });\n            return {\n                ...state,\n                device: payload,\n                devices: newDevices,\n            };\n        },\n        [bluetoothActions.connectGattRequest](state, { payload }) {\n            console.log('connectGattRequest', payload);\n            let devices = state.devices.map((device) => {\n                if (device.name === payload.device.name) {\n                    device.connectionRequest = true;\n                }\n                return device;\n            });\n            return {\n                ...state,\n                server: payload.server,\n                devices,\n            };\n        },\n        [bluetoothActions.connectGattSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            let devices = state.devices.map((device) => {\n                if (device.name === payload.device.name) {\n                    device.connectionRequest = false;\n                    device.server = payload.server;\n                    device.GATTDisconnected = false;\n                }\n                return device;\n            });\n            return {\n                ...state,\n                server: payload.server,\n                devices,\n            };\n        },\n        [bluetoothActions.connectGattFailure](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            let devices = state.devices.map((device) => {\n                if (device.name === payload.device.name) {\n                    device.GATTDisconnected = true;\n                    device.connectionRequest = false;\n                }\n                return device;\n            });\n            return {\n                ...state,\n                devices,\n            };\n        },\n        [bluetoothActions.fetchBatteryServiceSuccess](state, { payload }) {\n            // console.log('fetchTokenSuccess', payload);\n            const { batteryService } = state;\n            return {\n                ...state,\n                batteryService: { ...batteryService, ...payload },\n            };\n        },\n        [bluetoothActions.fetchDeviceInfoCharacteristicSuccess](\n            state,\n            { payload }\n        ) {\n            // console.log('fetchTokenSuccess', payload);\n            const { deviceInfoService } = state;\n            return {\n                ...state,\n                deviceInfoService: { ...deviceInfoService, ...payload },\n            };\n        },\n    },\n    {\n        device: null,\n        devices: [],\n        server: null,\n        batteryService: null,\n        deviceInfoService: null,\n    }\n);\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.showAppPreloader](state, { payload }) {\n            // Stack for handle several requests\n            let stack = state.preloaderStack.slice();\n            if (payload) {\n                stack.push(0);\n            } else {\n                stack.shift();\n            }\n            return {\n                ...state,\n                showPreloader: !!stack.length,\n                preloaderStack: stack,\n            };\n        },\n    },\n    {\n        showPreloader: false,\n        preloaderStack: [],\n    }\n);\n","import reducers from './reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nconst middleware = getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: true,\n});\n\nexport default configureStore({\n    reducer: { ...reducers },\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}