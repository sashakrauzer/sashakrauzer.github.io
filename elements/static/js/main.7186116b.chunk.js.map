{"version":3,"sources":["assets/images/elements.svg","utils/index.js","actions/index.js","components/GoogleOauth/index.jsx","components/Login/index.js","components/WebBluetooth/index.jsx","components/Account/index.js","App.jsx","reducers/index.js","reducers/auth.js","reducers/data.js","store.js","index.jsx"],"names":["module","exports","readStateFromCookie","name","Cookies","get","axios","defaults","baseURL","fetchTokenRequest","createAction","fetchTokenSuccess","fetchTokenFailure","convertToken","data","dispatch","getState","console","log","post","grant_type","client_id","backend","token","then","response","state","duration","cookies","expiresDate","Date","setSeconds","getSeconds","set","JSON","stringify","path","expires","writeStateToCookie","expires_in","catch","fetchRecipesRequest","fetchRecipesSuccess","fetchRecipesFailure","fetchUserSuccess","fetchUserFailure","fetchUserDevicesSuccess","fetchUserDevicesFailure","actionCreators","actions","GoogleOauth","responseGoogleRequest","responseGoogleSuccess","props","accessToken","responseGoogleFailure","clientId","buttonText","onSuccess","this","onFailure","onRequest","cookiePolicy","Component","connect","auth","Login","className","src","logo","alt","bluetoothDevice","WebBluetooth","connectToDevice","navigator","bluetooth","requestDevice","acceptAllDevices","optionalServices","device","addEventListener","onDisconnected","gatt","server","getPrimaryService","service","getCharacteristic","characteristic","startNotifications","handleBatteryLevelChanged","readValue","value","getUint8","error","disconnect","onReconnectButtonClick","connected","event","batteryLevel","target","onClick","recipe","user","access_token","cookie","headers","Authorization","userDevices","Devices","devices","recipes","map","span","title","style","width","cover","image","description_text","Recipes","gutter","Account","current","handleClick","e","setState","key","first_name","last_name","selectedKeys","mode","Item","icon","AntDesignOutlined","ReadOutlined","App","authCookie","handleActions","payload","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","reducer","reducers","devTools","process","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7186116b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elements.b15f934a.svg\";","import Cookies from 'universal-cookie';\n\nexport const writeStateToCookie = (state, name, duration) => {\n    const cookies = new Cookies();\n    const expiresDate = new Date();\n    // expiresDate.setDate(expiresDate.getDate() + duration);\n    expiresDate.setSeconds(expiresDate.getSeconds() + duration);\n    cookies.set(name, JSON.stringify(state), {\n        path: '/',\n        expires: expiresDate,\n    });\n};\n\nexport const readStateFromCookie = (name) => {\n    const cookies = new Cookies();\n    return cookies.get(name);\n};\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\nimport { writeStateToCookie, readStateFromCookie } from '../utils/index';\n\naxios.defaults.baseURL = 'http://45.33.35.232/api';\n\n///////////////////////\n//// auth actions ////\n/////////////////////\n\nexport const fetchTokenRequest = createAction('FETCH_TOKEN_REQUEST');\nexport const fetchTokenSuccess = createAction('FETCH_TOKEN_SUCCESS');\nexport const fetchTokenFailure = createAction('FETCH_TOKEN_FAILURE');\n\nexport const convertToken = (data) => {\n    return (dispatch, getState) => {\n        console.log(dispatch, getState, data);\n\n        dispatch(fetchTokenRequest());\n\n        axios\n            .post('oauth/convert-token/', {\n                grant_type: 'convert_token',\n                client_id: 'qxN1hlSy0GbXqE6au6Hd63N4YOWK6WCP2TuXWzaO',\n                backend: 'google-oauth2',\n                token: data,\n            })\n            .then((response) => {\n                console.log('success', response);\n                writeStateToCookie(\n                    response.data,\n                    'auth_cookie',\n                    response.data.expires_in\n                );\n                console.log(\n                    'ReadStateFromCookie',\n                    readStateFromCookie('auth_cookie')\n                );\n                dispatch(fetchTokenSuccess(response.data));\n                // dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                // handleAPIError(err, dispatch);\n                dispatch(fetchTokenFailure());\n            });\n    };\n};\n\n///////////////////////\n////// recipes ///////\n/////////////////////\n\nexport const fetchRecipesRequest = createAction('FETCH_RECIPES_REQUEST');\nexport const fetchRecipesSuccess = createAction('FETCH_RECIPES_SUCCESS');\nexport const fetchRecipesFailure = createAction('FETCH_RECIPES_FAILURE');\n\nexport const recipe = () => {\n    return (dispatch, getState) => {\n        // console.log(dispatch, getState, data);\n\n        dispatch(fetchRecipesRequest());\n\n        axios\n            .get('recipe/')\n            .then((response) => {\n                console.log('success', response);\n                dispatch(fetchRecipesSuccess(response.data));\n                // dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                // handleAPIError(err, dispatch);\n                dispatch(fetchRecipesFailure());\n            });\n    };\n};\n\nexport const fetchUserRequest = createAction('FETCH_USER_REQUEST');\nexport const fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\nexport const fetchUserFailure = createAction('FETCH_USER_FAILURE');\n\nexport const user = () => {\n    return (dispatch, getState) => {\n        // console.log(dispatch, getState, data);\n\n        dispatch(fetchRecipesRequest());\n\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n        console.log('getState', access_token);\n        axios\n            .get('user/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                console.log('success', response);\n                dispatch(fetchUserSuccess(response.data));\n                // dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                // handleAPIError(err, dispatch);\n                dispatch(fetchUserFailure());\n            });\n    };\n};\n\nexport const fetchUserDevicesRequest = createAction(\n    'FETCH_USER_DEVICES_REQUEST'\n);\nexport const fetchUserDevicesSuccess = createAction(\n    'FETCH_USER_DEVICES_SUCCESS'\n);\nexport const fetchUserDevicesFailure = createAction(\n    'FETCH_USER_DEVICES_FAILURE'\n);\n\nexport const userDevices = () => {\n    return (dispatch, getState) => {\n        // console.log(dispatch, getState, data);\n\n        dispatch(fetchRecipesRequest());\n\n        const {\n            auth: {\n                cookie: { access_token },\n            },\n        } = getState();\n\n        axios\n            .get('user/devices/', {\n                headers: {\n                    Authorization: `Bearer ${access_token}`,\n                },\n            })\n            .then((response) => {\n                console.log('success', response);\n                dispatch(fetchUserDevicesSuccess(response.data));\n                // dispatch(showAppPreloader(false));\n            })\n            .catch(() => {\n                // handleAPIError(err, dispatch);\n                dispatch(fetchUserDevicesFailure());\n            });\n    };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GoogleLogin from 'react-google-login';\nimport * as actions from '../../actions';\n\n// const responseGoogle = (response, status) => {\n//     console.log(response, status);\n// };\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\nclass GoogleOauth extends Component {\n    responseGoogleRequest = (response) => {\n        console.log(response, 'request');\n    };\n\n    responseGoogleSuccess = (response) => {\n        const { convertToken } = this.props;\n        console.log(response, 'success');\n        convertToken(response.accessToken);\n    };\n\n    responseGoogleFailure = (response) => {\n        console.log(response, 'failure');\n    };\n\n    render() {\n        return (\n            <GoogleLogin\n                // clientId=\"385449723022-vmed4lc1a8a1t3fsat4flujbobsblv01.apps.googleusercontent.com\"\n                clientId=\"205221816405-0lvlolma2t1lvif67t749qee7h9te473.apps.googleusercontent.com\"\n                // redirectUri=\"http://localhost:3000\"\n                buttonText=\"Login\"\n                onSuccess={this.responseGoogleSuccess}\n                onFailure={this.responseGoogleFailure}\n                onRequest={this.responseGoogleRequest}\n                cookiePolicy={'single_host_origin'}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(GoogleOauth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GoogleOauth from '../GoogleOauth/index.jsx';\nimport logo from '../../assets/images/elements.svg';\nimport * as actions from '../../actions';\n\n// const responseGoogle = (response, status) => {\n//     console.log(response, status);\n// };\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n    } = state;\n    return {\n        token,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n};\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"App\" path=\"/\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                        App for test BLE <u>Web connect</u>\n                    </p>\n                    {/* <WebBluetooth /> */}\n                    <GoogleOauth />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n","import React, { Component } from 'react';\n\nlet bluetoothDevice = null;\nlet batteryLevelCharacteristic = null;\n\nclass WebBluetooth extends Component {\n    // state = {\n    //     bluetoothDevice: null,\n    //     batteryLevelCharacteristic: null,\n    // };\n\n    connectToDevice = () => {\n        navigator.bluetooth\n            .requestDevice({\n                acceptAllDevices: true,\n                optionalServices: ['battery_service'],\n            })\n            .then((device) => {\n                console.log('device', device);\n                bluetoothDevice = device;\n                bluetoothDevice.addEventListener(\n                    'gattserverdisconnected',\n                    this.onDisconnected\n                );\n                return bluetoothDevice.gatt.connect();\n            })\n            .then((server) => {\n                console.log('server', server);\n                // Getting Battery Service...\n                return server.getPrimaryService('battery_service');\n            })\n            .then((service) => {\n                console.log('service', service);\n                // Getting Battery Level Characteristic...\n                return service.getCharacteristic('battery_level');\n            })\n            .then((characteristic) => {\n                console.log('characteristic', characteristic);\n                // Reading Battery Level...\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleBatteryLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('value', value);\n                console.log('Battery percentage is ' + value.getUint8(0));\n            })\n            .catch((error) => {\n                console.log('error', error);\n            });\n    };\n\n    handleBatteryLevelChanged(event) {\n        let batteryLevel = event.target.value.getUint8(0);\n        console.log('Event - Battery percentage is ' + batteryLevel);\n    }\n\n    onDisconnected() {\n        console.log('> Bluetooth Device disconnected');\n        // connectDeviceAndCacheCharacteristics().catch((error) => {\n        //     console.log('Argh! ' + error);\n        // });\n    }\n\n    disconnect = () => {\n        bluetoothDevice.gatt.disconnect();\n    };\n\n    connect() {\n        console.log('Connecting to Bluetooth Device...');\n        return bluetoothDevice.gatt.connect();\n    }\n\n    onReconnectButtonClick = () => {\n        if (!bluetoothDevice) {\n            return;\n        }\n        if (bluetoothDevice.gatt.connected) {\n            console.log('> Bluetooth Device is already connected');\n            return;\n        }\n        this.connect()\n            .then((server) => {\n                console.log('server', server);\n                // Getting Battery Service...\n                return server.getPrimaryService('battery_service');\n            })\n            .then((service) => {\n                console.log('service', service);\n                // Getting Battery Level Characteristic...\n                return service.getCharacteristic('battery_level');\n            })\n            .then((characteristic) => {\n                console.log('characteristic', characteristic);\n                // Reading Battery Level...\n                characteristic.startNotifications();\n                characteristic.addEventListener(\n                    'characteristicvaluechanged',\n                    this.handleBatteryLevelChanged\n                );\n                return characteristic.readValue();\n            })\n            .then((value) => {\n                console.log('value', value);\n                console.log('Battery percentage is ' + value.getUint8(0));\n            })\n            .catch((error) => {\n                console.log('error', error);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={this.connectToDevice}\n                    // className={'bluetooth__connect-btn'}\n                >\n                    Add device\n                </button>\n                {/* <button onClick={this.disconnect}>Дисконект</button>\n                <button onClick={this.onReconnectButtonClick}>Reconect</button> */}\n            </div>\n        );\n    }\n}\n\nexport default WebBluetooth;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, PageHeader, Card, Col, Row } from 'antd';\nimport {\n    MailOutlined,\n    // AppstoreOutlined,\n    // SettingOutlined,\n    AntDesignOutlined,\n    ReadOutlined,\n} from '@ant-design/icons';\n\nimport * as actions from '../../actions';\nimport WebBluetooth from '../WebBluetooth';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { token },\n        data,\n    } = state;\n    return {\n        token,\n        data,\n    };\n};\n\nconst actionCreators = {\n    convertToken: actions.convertToken,\n    recipe: actions.recipe,\n    user: actions.user,\n    userDevices: actions.userDevices,\n};\n\nclass Devices extends Component {\n    render() {\n        let devices =\n            this.props.recipes &&\n            this.props.recipes.map((device) => {\n                return (\n                    <Col span={8}>\n                        <Card\n                            title={device.name}\n                            // extra={<a href=\"#\">More</a>}\n                            style={{ width: 300 }}\n                            cover={<img alt=\"example\" src={device.image} />}\n                        >\n                            <p>{device.description_text}</p>\n                        </Card>\n                    </Col>\n                );\n            });\n        console.log('fsadasd', devices);\n        return (\n            <>\n                <div>{devices || 'devices not found'}</div>\n                <WebBluetooth />\n            </>\n        );\n    }\n}\n\nclass Recipes extends Component {\n    render() {\n        let recipes = this.props.recipes.map((recipe) => {\n            return (\n                <Col span={8}>\n                    <Card\n                        title={recipe.name}\n                        // extra={<a href=\"#\">More</a>}\n                        style={{ width: 300 }}\n                        cover={<img alt=\"example\" src={recipe.image} />}\n                    >\n                        <p>{recipe.description_text}</p>\n                    </Card>\n                </Col>\n            );\n        });\n        console.log('fsadasd', recipes);\n        return <Row gutter={16}>{recipes}</Row>;\n    }\n}\n\nclass Account extends Component {\n    state = {\n        current: 'devices',\n    };\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({ current: e.key });\n    };\n\n    componentDidMount() {\n        const { recipe, user, userDevices } = this.props;\n        // console.log('didMount');\n        recipe();\n        user();\n        userDevices();\n    }\n\n    render() {\n        const { current } = this.state;\n        const {\n            data: { user, recipe, userDevices },\n        } = this.props;\n        console.log('account', user);\n        return (\n            <>\n                <PageHeader\n                    title={\n                        <div>\n                            {user && user.first_name + ' ' + user.last_name}\n                        </div>\n                    }\n                >\n                    <Menu\n                        onClick={this.handleClick}\n                        selectedKeys={[current]}\n                        mode=\"horizontal\"\n                    >\n                        <Menu.Item key=\"devices\" icon={<AntDesignOutlined />}>\n                            Мои устройства\n                        </Menu.Item>\n                        <Menu.Item key=\"recipes\" icon={<ReadOutlined />}>\n                            Рецепты\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"mail3\" icon={<MailOutlined />}>\n                        Navigation One\n                    </Menu.Item>\n                    <Menu.Item key=\"mail4\" icon={<MailOutlined />}>\n                        Navigation One\n                    </Menu.Item>\n                    <Menu.Item key=\"mail5\" icon={<MailOutlined />}>\n                        Navigation One\n                    </Menu.Item>\n                    <Menu.Item key=\"mail6\" icon={<MailOutlined />}>\n                        Navigation One\n                    </Menu.Item>\n                    <Menu.Item key=\"mail7\" icon={<MailOutlined />}>\n                        Navigation One\n                    </Menu.Item> */}\n                    </Menu>\n                    {/* <WebBluetooth /> */}\n                </PageHeader>\n                {this.state.current === 'devices' ? (\n                    <Devices devices={userDevices} />\n                ) : (\n                    <Recipes recipes={recipe} />\n                )}\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Account);\n","import React, { Component } from 'react';\nimport { Router } from '@reach/router';\nimport { connect } from 'react-redux';\n\nimport * as actions from './actions';\nimport { readStateFromCookie } from './utils';\nimport 'antd/dist/antd.css';\nimport './App.css';\n// import WebBluetooth from './WebBluetooth';\n// import GoogleOauth from './components/GoogleOauth';\nimport Login from './components/Login';\nimport Account from './components/Account';\n\nconst mapStateToProps = (state) => {\n    const {\n        auth: { cookie },\n    } = state;\n    return {\n        cookie,\n    };\n};\n\nconst actionCreators = {\n    fetchTokenSuccess: actions.fetchTokenSuccess,\n};\n\nclass App extends Component {\n    // connectToDevice = () => {\n    //     navigator.bluetooth\n    //         .requestDevice({\n    //             acceptAllDevices: true,\n    //             optionalServices: ['battery_service'],\n    //         })\n    //         .then((device) => {\n    //             console.log(device);\n    //         })\n    //         .catch((error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n    componentDidMount() {\n        const { fetchTokenSuccess } = this.props;\n        const authCookie = readStateFromCookie('auth_cookie');\n        if (authCookie) {\n            fetchTokenSuccess(authCookie);\n        }\n    }\n\n    render() {\n        const { cookie } = this.props;\n        return (\n            <Router>\n                {/* <Redirect from=\"/\" to={`/myUrl`} noThrow /> */}\n                {/* <div className=\"App\" path=\"/\">\n                    <header className=\"App-header\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        <p>\n                            App for test BLE <u>Web connect</u>\n                        </p>\n                        <GoogleOauth />\n                    </header>\n                </div> */}\n                {cookie.access_token ? (\n                    <Account path=\"/\" />\n                ) : (\n                    <Login path=\"/\" />\n                )}\n            </Router>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import auth from './auth';\nimport data from './data';\n\nexport default {\n    auth,\n    data,\n};\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.fetchTokenSuccess](state, { payload }) {\n            console.log('fetchTokenSuccess', payload);\n            return {\n                ...state,\n                cookie: payload,\n            };\n        },\n    },\n    {\n        cookie: {},\n    }\n);\n","import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nexport default handleActions(\n    {\n        [actions.fetchRecipesSuccess](state, { payload }) {\n            console.log('fetchRecipesSuccess', payload);\n            return {\n                ...state,\n                recipe: payload,\n            };\n        },\n        [actions.fetchUserSuccess](state, { payload }) {\n            console.log('fetchUserSuccess', payload);\n            return {\n                ...state,\n                user: payload,\n            };\n        },\n        [actions.fetchUserDevicesSuccess](state, { payload }) {\n            console.log('fetchUserDevicesSuccess', payload);\n            return {\n                ...state,\n                userDevices: payload,\n            };\n        },\n    },\n    {\n        recipe: [],\n        user: null,\n        userDevices: null,\n    }\n);\n","import reducers from './reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nconst middleware = getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: true,\n});\n\nexport default configureStore({\n    reducer: { ...reducers },\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}